{"version":3,"file":"js/app.7ec0d1cd.js","mappings":"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","sources":["webpack://threejsdemo/./src/App.vue","webpack://threejsdemo/./src/components/HomePage.vue","webpack://threejsdemo/./src/components/NavMenu.vue","webpack://threejsdemo/./src/components/NavMenu.vue?bcc5","webpack://threejsdemo/./src/components/HomePage.vue?8b1a","webpack://threejsdemo/./src/components/AboutPage.vue","webpack://threejsdemo/./src/const.js","webpack://threejsdemo/./src/components/AboutPage.vue?95cc","webpack://threejsdemo/./src/components/FirstPage.vue","webpack://threejsdemo/./src/components/FirstPage.vue?a07f","webpack://threejsdemo/./src/components/SecondPage.vue","webpack://threejsdemo/./src/components/SecondPage.vue?ee1e","webpack://threejsdemo/./src/components/TempPage.vue","webpack://threejsdemo/./src/components/TempPage.vue?ef17","webpack://threejsdemo/./src/components/APage.vue","webpack://threejsdemo/./src/components/APage.vue?b082","webpack://threejsdemo/./src/components/BPage.vue","webpack://threejsdemo/./src/components/utils/cannonUtils.js","webpack://threejsdemo/./src/components/BPage.vue?ba31","webpack://threejsdemo/./src/components/WaterPage.vue","webpack://threejsdemo/./src/components/utils/floater.js","webpack://threejsdemo/./src/components/utils/gerstnerWater.js","webpack://threejsdemo/./src/components/WaterPage.vue?7bb9","webpack://threejsdemo/./src/router.js","webpack://threejsdemo/./src/App.vue?7ccd","webpack://threejsdemo/./src/main.js","webpack://threejsdemo/webpack/bootstrap","webpack://threejsdemo/webpack/runtime/chunk loaded","webpack://threejsdemo/webpack/runtime/compat get default export","webpack://threejsdemo/webpack/runtime/define property getters","webpack://threejsdemo/webpack/runtime/global","webpack://threejsdemo/webpack/runtime/hasOwnProperty shorthand","webpack://threejsdemo/webpack/runtime/jsonp chunk loading","webpack://threejsdemo/webpack/startup"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nimport router from './router'\n// import LegendaryCursor from \"legendary-cursor\";\n\nexport default {\n  name: 'App',\n  components: {\n    // Khai báo các component sử dụng trong ứng dụng\n  },\n  router, // Sử dụng router trong ứng dụng\n  mounted() {\n    // window.addEventListener(\"load\", () => {\n    //   LegendaryCursor.init();\n    // });\n  }\n}\n</script>\n\n<style>\n  html, body {\n    margin: 0;\n    height: 100%;\n  }\n  .note-text {\n    position: absolute;\n    top: 110px;\n    left: 20px;\n    font-size: 16px;\n  }\n  h1 {\n    position: absolute;\n    top: 0px;\n    left: 20px;\n  }\n  .nav-buttons {\n    display: flex;\n    justify-content: space-between;\n    position: absolute;\n    top: 70px;\n  }\n\n  .nav-button {\n    background-color: #ccc;\n    border: 1px solid black;\n    color: #333;\n    padding: 5px 10px;\n    text-align: center;\n    text-decoration: none;\n    font-size: 12px;\n    cursor: pointer;\n    flex-grow: 1;\n    margin: 0 0px;\n  }\n\n\n  .active {\n    background-color: #f00;\n    color: #fff;\n  }\n  .x-axis-label {\n    position: absolute;\n    top: 10px;\n    right: 20px;\n    color: #ff0000;\n    font-size: 16px;\n  }\n  .y-axis-label {\n    position: absolute;\n    top: 30px;\n    right: 20px;\n    color: #00ff00;\n    font-size: 16px;\n  }\n  .z-axis-label {\n    position: absolute;\n    top: 50px;\n    right: 20px;\n    color: #0000ff;\n    font-size: 16px;\n  }\n  .x-axis-label, .y-axis-label, .z-axis-label {\n    z-index: 1000;\n  }\n  .x-color-box {\n    top: 12px;\n    right: 60px;\n    width: 30px;\n    height: 12px;\n    background-color: red;\n    display: inline-block;\n    position: absolute;\n    margin-right: 10px;\n  }\n  .y-color-box {\n    top: 32px;\n    right: 60px;\n    width: 30px;\n    height: 12px;\n    background-color: green;\n    display: inline-block;\n    position: absolute;\n    margin-right: 10px;\n  }\n  .z-color-box {\n    top: 52px;\n    right: 60px;\n    width: 30px;\n    height: 12px;\n    background-color: blue;\n    display: inline-block;\n    position: absolute;\n    margin-right: 10px;\n  }\n</style>\n\n","<template>\r\n  <div>\r\n    <div class=\"note-text\" style=\"color:red;\">A-W-S-D to move. Space to jump. Esc to exit</div>\r\n    <h1 style=\"color:red;\">Follow Camera</h1>\r\n    <nav-menu />\r\n    <div id=\"menuPanel\">\r\n      <button id=\"startButton\">Click to Start</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n//import * as MYCONST from '@/const.js';\r\nimport NavMenu from '@/components/NavMenu.vue'\r\nimport * as THREE from 'three'\r\nimport { PointerLockControls } from 'three/examples/jsm/controls/PointerLockControls'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\nimport * as CANNON from 'cannon-es'\r\nexport default {\r\n  name: 'HomePage',\r\n  components: {\r\n    NavMenu\r\n  },\r\n  mounted() {\r\n    const scene = new THREE.Scene()\r\n\r\n    var light1 = new THREE.SpotLight()\r\n    light1.position.set(2.5, 5, 2.5)\r\n    light1.angle = Math.PI / 8\r\n    light1.penumbra = 0.5\r\n    light1.castShadow = true\r\n    light1.shadow.mapSize.width = 1024\r\n    light1.shadow.mapSize.height = 1024\r\n    light1.shadow.camera.near = 0.5\r\n    light1.shadow.camera.far = 20\r\n    scene.add(light1)\r\n\r\n    var light2 = new THREE.SpotLight()\r\n    light2.position.set(-2.5, 5, 2.5)\r\n    light2.angle = Math.PI / 8\r\n    light2.penumbra = 0.5\r\n    light2.castShadow = true\r\n    light2.shadow.mapSize.width = 1024\r\n    light2.shadow.mapSize.height = 1024\r\n    light2.shadow.camera.near = 0.5\r\n    light2.shadow.camera.far = 20\r\n    scene.add(light2)\r\n\r\n    const camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      window.innerWidth / window.innerHeight,\r\n      0.01,\r\n      100\r\n    )\r\n    camera.position.set(0, 1.4, 2.0)\r\n\r\n    const followCamPivot = new THREE.Object3D()\r\n    followCamPivot.rotation.order = 'YXZ'\r\n    const followCam = new THREE.Object3D()\r\n    followCam.position.z = 2\r\n    followCamPivot.add(followCam)\r\n\r\n    const renderer = new THREE.WebGLRenderer()\r\n    renderer.setSize(window.innerWidth, window.innerHeight)\r\n    //renderer.setClearColor(MYCONST.RENDERER_CLEAR_COLOR)\r\n    renderer.outputEncoding = THREE.sRGBEncoding\r\n    renderer.shadowMap.enabled = true\r\n    this.$el.appendChild(renderer.domElement)\r\n\r\n    const world = new CANNON.World()\r\n    world.gravity.set(0, -9.82, 0)\r\n\r\n    const groundMaterial = new CANNON.Material('groundMaterial')\r\n    const slipperyMaterial = new CANNON.Material('slipperyMaterial')\r\n    const slippery_ground_cm = new CANNON.ContactMaterial(\r\n      groundMaterial,\r\n      slipperyMaterial,\r\n      {\r\n        friction: 0,\r\n        restitution: 0.3,\r\n        contactEquationStiffness: 1e8,\r\n        contactEquationRelaxation: 3,\r\n      }\r\n    )\r\n    world.addContactMaterial(slippery_ground_cm)\r\n\r\n    // Character Collider\r\n    const characterCollider = new THREE.Object3D()\r\n    characterCollider.add(followCamPivot)\r\n    characterCollider.position.y = 3\r\n    scene.add(characterCollider)\r\n    const colliderShape = new CANNON.Sphere(0.5)\r\n    const colliderBody = new CANNON.Body({ mass: 1, material: slipperyMaterial })\r\n    colliderBody.addShape(colliderShape, new CANNON.Vec3(0, 0.5, 0))\r\n    colliderBody.addShape(colliderShape, new CANNON.Vec3(0, -0.5, 0))\r\n    colliderBody.position.set(\r\n      characterCollider.position.x,\r\n      characterCollider.position.y,\r\n      characterCollider.position.z\r\n    )\r\n    colliderBody.linearDamping = 0.95\r\n    colliderBody.angularFactor.set(0, 1, 0) // prevents rotation X,Z axis\r\n    world.addBody(colliderBody)\r\n\r\n    let mixer\r\n    let modelReady = false\r\n    let modelMesh\r\n    const animationActions = []\r\n    let activeAction\r\n    let lastAction\r\n\r\n    const gltfLoader = new GLTFLoader()\r\n    gltfLoader.load(\r\n      'models/eve.glb',\r\n      (gltf) => {\r\n        gltf.scene.traverse(function (child) {\r\n          if ((child).isMesh) {\r\n            let m = child\r\n            m.receiveShadow = true\r\n            m.castShadow = true\r\n            m.frustumCulled = false\r\n              ; (m).geometry.computeVertexNormals()\r\n            if ((child).material) {\r\n              const mat = (child).material\r\n                ; (mat).transparent = false\r\n                ; (mat).side = THREE.FrontSide\r\n            }\r\n          }\r\n        })\r\n        mixer = new THREE.AnimationMixer(gltf.scene)\r\n        let animationAction = mixer.clipAction(gltf.animations[0])\r\n        animationActions.push(animationAction)\r\n        activeAction = animationActions[0]\r\n        scene.add(gltf.scene)\r\n        modelMesh = gltf.scene\r\n        light1.target = modelMesh\r\n        light2.target = modelMesh\r\n\r\n        //add an animation from another file\r\n        gltfLoader.load(\r\n          'models/eve@walking.glb',\r\n          (gltf) => {\r\n            console.log('loaded Eve walking')\r\n            let animationAction = mixer.clipAction(gltf.animations[0])\r\n            animationActions.push(animationAction)\r\n\r\n            gltfLoader.load(\r\n              'models/eve@jump.glb',\r\n              (gltf) => {\r\n                console.log('loaded Eve jump')\r\n                gltf.animations[0].tracks.shift() //delete the specific track that moves the object up/down while jumping\r\n                let animationAction = mixer.clipAction(\r\n                  gltf.animations[0]\r\n                )\r\n                animationActions.push(animationAction)\r\n                //progressBar.style.display = 'none'\r\n                modelReady = true\r\n\r\n                setAction(animationActions[1], true)\r\n              },\r\n              (xhr) => {\r\n                if (xhr.lengthComputable) {\r\n                  //const percentComplete = (xhr.loaded / xhr.total) * 100\r\n                  //progressBar.value = percentComplete\r\n                  //progressBar.style.display = 'block'\r\n                }\r\n              },\r\n              (error) => {\r\n                console.log(error)\r\n              }\r\n            )\r\n          },\r\n          (xhr) => {\r\n            if (xhr.lengthComputable) {\r\n              //const percentComplete = (xhr.loaded / xhr.total) * 100\r\n              //progressBar.value = percentComplete\r\n              //progressBar.style.display = 'block'\r\n            }\r\n          },\r\n          (error) => {\r\n            console.log(error)\r\n          }\r\n        )\r\n      },\r\n      (xhr) => {\r\n        if (xhr.lengthComputable) {\r\n          //const percentComplete = (xhr.loaded / xhr.total) * 100\r\n          //progressBar.value = percentComplete\r\n          //progressBar.style.display = 'block'\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error)\r\n      }\r\n    )\r\n\r\n    const setAction = (toAction, loop) => {\r\n      if (toAction != activeAction) {\r\n        lastAction = activeAction\r\n        activeAction = toAction\r\n        lastAction.fadeOut(0.1)\r\n        activeAction.reset()\r\n        activeAction.fadeIn(0.1)\r\n        activeAction.play()\r\n        if (!loop) {\r\n          activeAction.clampWhenFinished = true\r\n          activeAction.loop = THREE.LoopOnce\r\n        }\r\n      }\r\n    }\r\n\r\n    let moveForward = false\r\n    let moveBackward = false\r\n    let moveLeft = false\r\n    let moveRight = false\r\n    let canJump = true\r\n    const contactNormal = new CANNON.Vec3()\r\n    const upAxis = new CANNON.Vec3(0, 1, 0)\r\n    colliderBody.addEventListener('collide', function (e) {\r\n      const contact = e.contact\r\n      if (contact.bi.id == colliderBody.id) {\r\n        contact.ni.negate(contactNormal)\r\n      } else {\r\n        contactNormal.copy(contact.ni)\r\n      }\r\n      if (contactNormal.dot(upAxis) > 0.5) {\r\n        if (!canJump) {\r\n          setAction(animationActions[1], true)\r\n        }\r\n        canJump = true\r\n      }\r\n    })\r\n\r\n    const planeGeometry = new THREE.PlaneGeometry(100, 100)\r\n    const texture = new THREE.TextureLoader().load('img/grid.png')\r\n    const plane = new THREE.Mesh(\r\n      planeGeometry,\r\n      new THREE.MeshPhongMaterial({ map: texture })\r\n    )\r\n    plane.rotateX(-Math.PI / 2)\r\n    plane.receiveShadow = true\r\n    scene.add(plane)\r\n    const planeShape = new CANNON.Plane()\r\n    const planeBody = new CANNON.Body({ mass: 0, material: groundMaterial })\r\n    planeBody.addShape(planeShape)\r\n    planeBody.quaternion.setFromAxisAngle(new CANNON.Vec3(1, 0, 0), -Math.PI / 2)\r\n    world.addBody(planeBody)\r\n\r\n    const boxes = []\r\n    const boxMeshes = []\r\n    for (let i = 0; i < 10; i++) {\r\n      const halfExtents = new CANNON.Vec3(\r\n        Math.random() * 2,\r\n        Math.random() * 2,\r\n        Math.random() * 2\r\n      )\r\n      const boxShape = new CANNON.Box(halfExtents)\r\n      const boxGeometry = new THREE.BoxGeometry(\r\n        halfExtents.x * 2,\r\n        halfExtents.y * 2,\r\n        halfExtents.z * 2\r\n      )\r\n      const x = (Math.random() - 0.5) * 20\r\n      const y = 2 + i * 2\r\n      const z = (Math.random() - 0.5) * 20\r\n      const boxBody = new CANNON.Body({ mass: 1, material: groundMaterial })\r\n      boxBody.addShape(boxShape)\r\n      const boxMesh = new THREE.Mesh(boxGeometry, new THREE.MeshStandardMaterial())\r\n      world.addBody(boxBody)\r\n      scene.add(boxMesh)\r\n      boxBody.position.set(x, y, z)\r\n      boxMesh.castShadow = true\r\n      boxMesh.receiveShadow = true\r\n      boxes.push(boxBody)\r\n      boxMeshes.push(boxMesh)\r\n    }\r\n\r\n    const menuPanel = document.getElementById('menuPanel')\r\n    const startButton = document.getElementById('startButton')\r\n    startButton.addEventListener(\r\n      'click',\r\n      () => {\r\n        controls.lock()\r\n      },\r\n      false\r\n    )\r\n\r\n    const controls = new PointerLockControls(camera, renderer.domElement)\r\n\r\n    controls.addEventListener('lock', () => {\r\n      startButton.style.display = 'none'\r\n      menuPanel.style.display = 'none'\r\n\r\n      document.addEventListener('keydown', onDocumentKey, false)\r\n      document.addEventListener('keyup', onDocumentKey, false)\r\n\r\n      renderer.domElement.addEventListener(\r\n        'mousemove',\r\n        onDocumentMouseMove,\r\n        false\r\n      )\r\n      renderer.domElement.addEventListener(\r\n        'mousewheel',\r\n        onDocumentMouseWheel,\r\n        false\r\n      )\r\n    })\r\n\r\n    controls.addEventListener('unlock', () => {\r\n      menuPanel.style.display = 'block'\r\n\r\n      document.removeEventListener('keydown', onDocumentKey, false)\r\n      document.removeEventListener('keyup', onDocumentKey, false)\r\n\r\n      renderer.domElement.removeEventListener(\r\n        'mousemove',\r\n        onDocumentMouseMove,\r\n        false\r\n      )\r\n      renderer.domElement.removeEventListener(\r\n        'mousewheel',\r\n        onDocumentMouseWheel,\r\n        false\r\n      )\r\n\r\n      setTimeout(() => {\r\n        startButton.style.display = 'block'\r\n      }, 1000)\r\n    })\r\n\r\n    window.addEventListener('resize', onWindowResize, false)\r\n    function onWindowResize() {\r\n      camera.aspect = window.innerWidth / window.innerHeight\r\n      camera.updateProjectionMatrix()\r\n      renderer.setSize(window.innerWidth, window.innerHeight)\r\n      render()\r\n    }\r\n\r\n    const onDocumentMouseMove = (e) => {\r\n      followCamPivot.rotation.y -= e.movementX * 0.002\r\n      followCamPivot.rotation.x -= e.movementY * 0.002\r\n      return false\r\n    }\r\n\r\n    const onDocumentMouseWheel = (e) => {\r\n      let newVal = followCam.position.z + e.deltaY * 0.05\r\n      if (newVal > 0.25 && newVal < 10) {\r\n        followCam.position.z = newVal\r\n      }\r\n      return false\r\n    }\r\n\r\n    const keyMap = {}\r\n    const onDocumentKey = (e) => {\r\n      keyMap[e.code] = e.type === 'keydown'\r\n\r\n      if (controls.isLocked) {\r\n        moveForward = keyMap['KeyW']\r\n        moveBackward = keyMap['KeyS']\r\n        moveLeft = keyMap['KeyA']\r\n        moveRight = keyMap['KeyD']\r\n\r\n        if (keyMap['Space']) {\r\n          if (canJump === true) {\r\n            colliderBody.velocity.y = 10\r\n            setAction(animationActions[2], false)\r\n          }\r\n          canJump = false\r\n        }\r\n      }\r\n    }\r\n\r\n    const inputVelocity = new THREE.Vector3()\r\n    const velocity = new CANNON.Vec3()\r\n    const euler = new THREE.Euler()\r\n    const quat = new THREE.Quaternion()\r\n    const camTo = new THREE.Vector3()\r\n    const targetQuaternion = new THREE.Quaternion()\r\n    let distance = 0\r\n\r\n    // const stats = new Stats()\r\n    // document.body.appendChild(stats.dom)\r\n\r\n    const clock = new THREE.Clock()\r\n    let delta = 0\r\n\r\n    //const cannonDebugRenderer = new CannonDebugRenderer(scene, world)\r\n\r\n    function animate() {\r\n      requestAnimationFrame(animate)\r\n\r\n      if (modelReady) {\r\n        if (canJump) {\r\n          //walking\r\n          mixer.update(delta * distance * 5)\r\n        } else {\r\n          //were in the air\r\n          mixer.update(delta)\r\n        }\r\n        const p = characterCollider.position\r\n        p.y -= 1\r\n        modelMesh.position.y = characterCollider.position.y\r\n        distance = modelMesh.position.distanceTo(p)\r\n\r\n        const rotationMatrix = new THREE.Matrix4()\r\n        rotationMatrix.lookAt(p, modelMesh.position, modelMesh.up)\r\n        targetQuaternion.setFromRotationMatrix(rotationMatrix)\r\n\r\n        if (!modelMesh.quaternion.equals(targetQuaternion)) {\r\n          modelMesh.quaternion.rotateTowards(targetQuaternion, delta * 10)\r\n        }\r\n\r\n        if (canJump) {\r\n          inputVelocity.set(0, 0, 0)\r\n\r\n          if (moveForward) {\r\n            inputVelocity.z = -10 * delta\r\n          }\r\n          if (moveBackward) {\r\n            inputVelocity.z = 10 * delta\r\n          }\r\n\r\n          if (moveLeft) {\r\n            inputVelocity.x = -10 * delta\r\n          }\r\n          if (moveRight) {\r\n            inputVelocity.x = 10 * delta\r\n          }\r\n\r\n          // apply camera rotation to inputVelocity\r\n          euler.y = followCamPivot.rotation.y\r\n          euler.order = 'XYZ'\r\n          quat.setFromEuler(euler)\r\n          inputVelocity.applyQuaternion(quat)\r\n        }\r\n\r\n        modelMesh.position.lerp(characterCollider.position, 0.1)\r\n      }\r\n      velocity.set(inputVelocity.x, inputVelocity.y, inputVelocity.z)\r\n      colliderBody.applyImpulse(velocity)\r\n\r\n      delta = Math.min(clock.getDelta(), 0.1)\r\n      world.step(delta)\r\n\r\n      //cannonDebugRenderer.update()\r\n\r\n      characterCollider.position.set(\r\n        colliderBody.position.x,\r\n        colliderBody.position.y,\r\n        colliderBody.position.z\r\n      )\r\n      boxes.forEach((b, i) => {\r\n        boxMeshes[i].position.set(b.position.x, b.position.y, b.position.z)\r\n        boxMeshes[i].quaternion.set(\r\n          b.quaternion.x,\r\n          b.quaternion.y,\r\n          b.quaternion.z,\r\n          b.quaternion.w\r\n        )\r\n      })\r\n\r\n      followCam.getWorldPosition(camTo)\r\n      camera.position.lerpVectors(camera.position, camTo, 0.1)\r\n\r\n      render()\r\n\r\n      // stats.update()\r\n    }\r\n\r\n    function render() {\r\n      renderer.render(scene, camera)\r\n    }\r\n\r\n    animate()\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n#menuPanel {\r\n  position: fixed;\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n  top: 100px;\r\n  left: 0px;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n#startButton {\r\n  height: 50px;\r\n  width: 200px;\r\n  margin: -25px -100px;\r\n  position: relative;\r\n  top: 50%;\r\n  left: 50%;\r\n  font-size: 32px;\r\n}\r\n</style>","<template>\r\n  <div class=\"x-color-box\"></div>\r\n  <div class=\"y-color-box\"></div>\r\n  <div class=\"z-color-box\"></div>\r\n  <div class=\"x-axis-label\">X Axis</div>\r\n  <div class=\"y-axis-label\">Y Axis</div>\r\n  <div class=\"z-axis-label\">Z Axis</div>\r\n  <div class=\"nav-buttons\">\r\n\r\n    <router-link to=\"/threejsdemo/\" exact exact-active-class=\"active\" active-class=\"inactive\" v-slot=\"{ navigate }\">\r\n      <button class=\"nav-button\" :class=\"{ active: $route.path === '/threejsdemo/' }\" @click=\"navigate()\">Follow Cam</button>\r\n    </router-link>\r\n\r\n    <router-link to=\"/threejsdemo/water\" exact exact-active-class=\"active\" active-class=\"inactive\" v-slot=\"{ navigate }\">\r\n      <button class=\"nav-button\" :class=\"{ active: $route.path === '/threejsdemo/water' }\" @click=\"navigate()\">Water</button>\r\n    </router-link>\r\n\r\n    <router-link to=\"/threejsdemo/a\" exact exact-active-class=\"active\" active-class=\"inactive\" v-slot=\"{ navigate }\">\r\n      <button class=\"nav-button\" :class=\"{ active: $route.path === '/threejsdemo/a' }\" @click=\"navigate()\">Canon JS</button>\r\n    </router-link>\r\n\r\n    <router-link to=\"/threejsdemo/b\" exact exact-active-class=\"active\" active-class=\"inactive\" v-slot=\"{ navigate }\">\r\n      <button class=\"nav-button\" :class=\"{ active: $route.path === '/threejsdemo/b' }\" @click=\"navigate()\">Convex Object</button>\r\n    </router-link>\r\n\r\n    <router-link to=\"/threejsdemo/multicoloredsphere\" exact exact-active-class=\"active\" active-class=\"inactive\" v-slot=\"{ navigate }\">\r\n      <button class=\"nav-button\" :class=\"{ active: $route.path === '/threejsdemo/multicoloredsphere' }\"\r\n        @click=\"navigate()\">Multicolored Sphere</button>\r\n    </router-link>\r\n\r\n    <router-link to=\"/threejsdemo/secondpage\" exact exact-active-class=\"active\" active-class=\"inactive\" v-slot=\"{ navigate }\">\r\n      <button class=\"nav-button\" :class=\"{ active: $route.path === '/threejsdemo/secondpage' }\" @click=\"navigate()\">Second\r\n        Page</button>\r\n    </router-link>\r\n\r\n    <router-link to=\"/threejsdemo/about\" exact exact-active-class=\"active\" active-class=\"inactive\" v-slot=\"{ navigate }\">\r\n      <button class=\"nav-button\" :class=\"{ active: $route.path === '/threejsdemo/about' }\" @click=\"navigate()\">Select Box</button>\r\n    </router-link>\r\n\r\n    <router-link to=\"/threejsdemo/temp\" exact exact-active-class=\"active\" active-class=\"inactive\" v-slot=\"{ navigate }\">\r\n      <button class=\"nav-button\" :class=\"{ active: $route.path === '/threejsdemo/temp' }\" @click=\"navigate()\">Temp</button>\r\n    </router-link>\r\n  </div>\r\n</template>\r\n","import { render } from \"./NavMenu.vue?vue&type=template&id=7a0ac620\"\nconst script = {}\n\nimport exportComponent from \"D:\\\\LUAN\\\\website\\\\vuejs_threejs\\\\VuejsThreejsForDemo\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./HomePage.vue?vue&type=template&id=31123421\"\nimport script from \"./HomePage.vue?vue&type=script&lang=js\"\nexport * from \"./HomePage.vue?vue&type=script&lang=js\"\n\nimport \"./HomePage.vue?vue&type=style&index=0&id=31123421&lang=css\"\n\nimport exportComponent from \"D:\\\\LUAN\\\\website\\\\vuejs_threejs\\\\VuejsThreejsForDemo\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <h1>Home Page</h1>\r\n    <nav-menu />\r\n  </div>\r\n</template>\r\n<script>\r\nimport * as MYCONST from '@/const.js';\r\nimport NavMenu from '@/components/NavMenu.vue'\r\nimport * as THREE from 'three'\r\n// import { OrbitControls } from 'three/addons/controls/OrbitControls.js';\r\n// import Stats from 'three/addons/libs/stats.module.js';\r\nimport { SelectionBox } from 'three/addons/interactive/SelectionBox.js';\r\nimport { SelectionHelper } from 'three/addons/interactive/SelectionHelper.js';\r\n\r\nexport default {\r\n  name: 'AboutPage',\r\n  components: {\r\n    NavMenu\r\n  },\r\n  mounted() {\r\n    let camera, scene, renderer;\r\n    let currentpage = this.$el;\r\n    init();\r\n    animate();\r\n\r\n    function init() {\r\n      camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 1, 5000 );\r\n      camera.position.z = 1000;\r\n      scene = new THREE.Scene();\r\n      //scene.background = new THREE.Color( 0xf0f0f0 );\r\n      scene.add( new THREE.AmbientLight( 0x505050 ) );\r\n\r\n      const light = new THREE.SpotLight( 0xffffff, 1.5 );\r\n      light.position.set( 0, 500, 2000 );\r\n      light.angle = Math.PI / 9;\r\n\r\n      light.castShadow = true;\r\n      light.shadow.camera.near = 1000;\r\n      light.shadow.camera.far = 4000;\r\n      light.shadow.mapSize.width = 1024;\r\n      light.shadow.mapSize.height = 1024;\r\n\r\n      scene.add( light );\r\n\r\n      const geometry = new THREE.BoxGeometry( 20, 20, 20 );\r\n\r\n      for ( let i = 0; i < 400; i ++ ) {\r\n        const object = new THREE.Mesh( geometry, new THREE.MeshLambertMaterial( { color: Math.random() * 0xffffff } ) );\r\n\r\n        object.position.x = Math.random() * 1600 - 800;\r\n        object.position.y = Math.random() * 900 - 450;\r\n        object.position.z = Math.random() * 900 - 500;\r\n\r\n        object.rotation.x = Math.random() * 2 * Math.PI;\r\n        object.rotation.y = Math.random() * 2 * Math.PI;\r\n        object.rotation.z = Math.random() * 2 * Math.PI;\r\n\r\n        object.scale.x = Math.random() * 2 + 1;\r\n        object.scale.y = Math.random() * 2 + 1;\r\n        object.scale.z = Math.random() * 2 + 1;\r\n\r\n        object.castShadow = true;\r\n        object.receiveShadow = true;\r\n\r\n        scene.add( object );\r\n      }\r\n\r\n      renderer = new THREE.WebGLRenderer( { antialias: true } );\r\n      renderer.setPixelRatio( window.devicePixelRatio );\r\n      renderer.setSize( window.innerWidth, window.innerHeight );\r\n\r\n      renderer.shadowMap.enabled = true;\r\n      renderer.shadowMap.type = THREE.PCFShadowMap;\r\n      renderer.setClearColor(MYCONST.RENDERER_CLEAR_COLOR);\r\n      // const controls = new OrbitControls( camera, renderer.domElement );\r\n      currentpage.appendChild( renderer.domElement );\r\n\r\n      // stats = new Stats();\r\n      // container.appendChild( stats.dom );\r\n\r\n      window.addEventListener( 'resize', onWindowResize );\r\n    }\r\n    function onWindowResize() {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize( window.innerWidth, window.innerHeight );\r\n    }\r\n\r\n    function animate() {\r\n      requestAnimationFrame( animate );\r\n      // controls.update();\r\n      render();\r\n    }\r\n\r\n    function render() {\r\n      renderer.render( scene, camera );\r\n    }\r\n\r\n    const selectionBox = new SelectionBox( camera, scene );\r\n    const helper = new SelectionHelper( renderer, 'selectBox' );\r\n\r\n    document.addEventListener( 'pointerdown', function ( event ) {\r\n      for ( const item of selectionBox.collection ) {\r\n        item.material.emissive.set( 0x000000 );\r\n      }\r\n\r\n      selectionBox.startPoint.set(\r\n        ( event.clientX / window.innerWidth ) * 2 - 1,\r\n        - ( event.clientY / window.innerHeight ) * 2 + 1,\r\n        0.5 );\r\n    } );\r\n\r\n    document.addEventListener( 'pointermove', function ( event ) {\r\n      if ( helper.isDown ) {\r\n        for ( let i = 0; i < selectionBox.collection.length; i ++ ) {\r\n          selectionBox.collection[ i ].material.emissive.set( 0x000000 );\r\n        }\r\n\r\n        selectionBox.endPoint.set(\r\n          ( event.clientX / window.innerWidth ) * 2 - 1,\r\n          - ( event.clientY / window.innerHeight ) * 2 + 1,\r\n          0.5 );\r\n\r\n        const allSelected = selectionBox.select();\r\n\r\n        for ( let i = 0; i < allSelected.length; i ++ ) {\r\n          allSelected[ i ].material.emissive.set( 0xff0000 );\r\n        }\r\n      }\r\n    } );\r\n\r\n    document.addEventListener( 'pointerup', function ( event ) {\r\n      selectionBox.endPoint.set(\r\n        ( event.clientX / window.innerWidth ) * 2 - 1,\r\n        - ( event.clientY / window.innerHeight ) * 2 + 1,\r\n        0.5 );\r\n\r\n      const allSelected = selectionBox.select();\r\n\r\n      for ( let i = 0; i < allSelected.length; i ++ ) {\r\n        allSelected[ i ].material.emissive.set( 0xff0000 );\r\n      }\r\n\r\n    });\r\n  },\r\n}\r\n</script>\r\n<style>\r\n  .selectBox {\r\n    border: 1px solid red;\r\n    background-color: rgba(255, 0, 0, 0.3);\r\n    position: fixed;\r\n  }\r\n</style>","export const RENDERER_CLEAR_COLOR = 0xcccccc;","import { render } from \"./AboutPage.vue?vue&type=template&id=e989e2fc\"\nimport script from \"./AboutPage.vue?vue&type=script&lang=js\"\nexport * from \"./AboutPage.vue?vue&type=script&lang=js\"\n\nimport \"./AboutPage.vue?vue&type=style&index=0&id=e989e2fc&lang=css\"\n\nimport exportComponent from \"D:\\\\LUAN\\\\website\\\\vuejs_threejs\\\\VuejsThreejsForDemo\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <h1>Create Multicolored Sphere in Threejs</h1>\n    <nav-menu />\n  </div>\n</template>\n<script>\nimport * as MYCONST from '@/const.js';\nimport NavMenu from '@/components/NavMenu.vue'\nimport * as THREE from 'three'\nimport { OrbitControls } from 'three/addons/controls/OrbitControls.js';\nexport default {\n  name: 'FirstPage',\n  components: {\n    NavMenu\n  },\n  mounted() {\n      const scene = new THREE.Scene();\n      \n      const camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\n      const renderer = new THREE.WebGLRenderer();\n      renderer.setClearColor(MYCONST.RENDERER_CLEAR_COLOR);\n      renderer.setSize( window.innerWidth, window.innerHeight );\n      \n      this.$el.appendChild( renderer.domElement );\n\n      const controls = new OrbitControls( camera, renderer.domElement );\n\n      const axesHelper = new THREE.AxesHelper( 10 );\n      scene.add( axesHelper );\n\n      // const geometry = new THREE.BoxGeometry();\n      // const material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\n      // const cube = new THREE.Mesh( geometry, material );\n      // scene.add( cube );\n      const size = 10;\n      const divisions = 10;\n\n      const gridHelper = new THREE.GridHelper( size, divisions );\n      scene.add( gridHelper );\n      // const geometryp = new THREE.PlaneGeometry( 10, 10 );\n      // const materialp = new THREE.MeshBasicMaterial( {color: 0x444400, side: THREE.DoubleSide} );\n      // const plane = new THREE.Mesh( geometryp, materialp );\n      // plane.rotateX(Math.PI/2);\n      // scene.add( plane );\n\n      camera.position.set(5,5,5);\n\n      var sphereMesh;\n      const createsphere = function () {\n        const radius = 4;\n        const widthSegments = 32;\n        const heightSegments = 32;\n        const sphereGeometry = new THREE.SphereGeometry(radius, widthSegments, heightSegments);\n        var rainbowColors = [\n          0xff0000, // Đỏ\n          0xffa500, // Cam\n          0xffff00, // Vàng\n          0x00ff00, // Xanh lá\n          0x0000ff, // Xanh dương\n          0x4b0082, // Xanh da trời\n          0xee82ee  // Tím\n        ];\n        const colors = new Array(sphereGeometry.attributes.position.count).fill().map(() =>\n            new THREE.Color().setHex(rainbowColors[Math.floor(Math.random() * rainbowColors.length)])\n        );\n        const colorAttribute = new THREE.Float32BufferAttribute(colors.flatMap(color => color.toArray()), 3);\n        sphereGeometry.setAttribute('color', colorAttribute);\n        const material = new THREE.MeshBasicMaterial({ vertexColors: true });\n        sphereMesh = new THREE.Mesh(sphereGeometry, material);\n        // sphereMesh.position.set(0,3,0);\n        scene.add(sphereMesh);\n      }\n      createsphere();\n\n      const animate = function () {\n        requestAnimationFrame( animate );\n        controls.update();\n        sphereMesh.rotation.y += 0.02;\n        sphereMesh.rotation.x += 0.02;\n        renderer.render( scene, camera );\n      };\n      animate();\n      function onWindowResize() {\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n        renderer.setSize(window.innerWidth, window.innerHeight);\n      }\n      window.addEventListener('resize', onWindowResize);\n    }\n  }\n</script>\n","import { render } from \"./FirstPage.vue?vue&type=template&id=4a92ac70\"\nimport script from \"./FirstPage.vue?vue&type=script&lang=js\"\nexport * from \"./FirstPage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\LUAN\\\\website\\\\vuejs_threejs\\\\VuejsThreejsForDemo\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <div class=\"note-text\">Using mouse move and mouse click</div>\n    <h1>Create particle system in Threejs</h1>\n    <nav-menu />\n  </div>\n</template>\n<script>\nimport * as MYCONST from '@/const.js';\nimport NavMenu from '@/components/NavMenu.vue'\nimport * as THREE from 'three'\nimport { OrbitControls } from 'three/addons/controls/OrbitControls.js';\n//import TWEEN from '@tweenjs/tween.js'\nexport default {\n  name: 'SecondPage',\n  components: {\n    NavMenu\n  },\n  mounted() {\n    // Khởi tạo scene, camera, renderer\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(5,1,5);\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setClearColor(MYCONST.RENDERER_CLEAR_COLOR);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    this.$el.appendChild(renderer.domElement);\n\n    const controls = new OrbitControls( camera, renderer.domElement );\n\n    const axesHelper = new THREE.AxesHelper( 10 );\n    scene.add( axesHelper );\n\n    // const geometryp = new THREE.PlaneGeometry( 2, 2 );\n    // const materialp = new THREE.MeshBasicMaterial( {color: 0xff0, side: THREE.DoubleSide} );\n    // const plane = new THREE.Mesh( geometryp, materialp );\n    // plane.rotateX(Math.PI/2);\n    // scene.add( plane );\n    const size = 10;\n    const divisions = 10;\n\n    const gridHelper = new THREE.GridHelper( size, divisions );\n    scene.add( gridHelper );\n\n    const particleGeometry = new THREE.BufferGeometry();\n\n    // generate random positions for each particle\n    const positions = [];\n    // const colors = [];\n    for (let i = 0; i < 100; i++) {\n      positions.push(\n        THREE.MathUtils.randFloatSpread(20),\n        THREE.MathUtils.randFloatSpread(20),\n        THREE.MathUtils.randFloatSpread(20)\n      );\n      // // add a random color for the particle\n      // colors.push(\n      //   Math.random(), // r\n      //   Math.random(), // g\n      //   Math.random(), // b\n      //   1 // a\n      // );\n    }\n\n    // create a buffer attribute for the particle positions\n    const positionAttribute = new THREE.Float32BufferAttribute(positions, 3);\n    particleGeometry.setAttribute('position', positionAttribute);\n\n    // // create a buffer attribute for the particle colors\n    // const colorAttribute = new THREE.Float32BufferAttribute(colors, 4);\n    // particleGeometry.setAttribute('color', colorAttribute);\n\n    // create a particle material\n    const particleMaterial = new THREE.PointsMaterial();\n\n    // create a particle system and add it to the scene\n    const particleSystem = new THREE.Points(particleGeometry, particleMaterial);\n    scene.add(particleSystem);\n\n    // // Khởi tạo audio listener\n    // var listener = new THREE.AudioListener();\n    // camera.add(listener);\n\n    // // Tải âm thanh\n    // var audioLoader = new THREE.AudioLoader();\n    // var sound;\n    // audioLoader.load('sound.mp3', function(buffer) {\n    //     sound = new THREE.Audio(listener);\n    //     sound.setBuffer(buffer);\n    //     sound.setLoop(true);\n    //     sound.setVolume(0.5);\n    //     sound.play();\n    // });\n\n    // Thêm sự kiện mousemove để thay đổi background\n    document.addEventListener('mousemove', function(event) {\n        var mouseX = event.clientX;\n        var mouseY = event.clientY;\n\n        // Di chuyển particle theo vị trí của chuột\n        particleSystem.rotation.x += 0.02;\n        particleSystem.rotation.y += 0.02;\n        particleSystem.position.x = (mouseX / window.innerWidth) * 2 - 1;\n        particleSystem.position.y = -(mouseY / window.innerHeight) * 2 + 1;\n\n        // Thay đổi màu nền dựa trên vị trí của particle\n        var color = new THREE.Color(0xffffff);\n        color.r = particleSystem.position.x * 0.5 + 0.5;\n        color.g = particleSystem.position.y * 0.5 + 0.5;\n        renderer.setClearColor(color);\n    });\n    var bSplat = false;\n    document.addEventListener('click', (event) => {\n      // calculate mouse position in normalized device coordinates\n      const mouse = new THREE.Vector2();\n      mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n      mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n\n      // unproject mouse position into particleSystem's local coordinate system\n      const raycaster = new THREE.Raycaster();\n      raycaster.setFromCamera(mouse, camera);\n      const particleSystemWorldPosition = new THREE.Vector3();\n      particleSystem.getWorldPosition(particleSystemWorldPosition);\n      const particleSystemWorldQuaternion = new THREE.Quaternion();\n      particleSystem.getWorldQuaternion(particleSystemWorldQuaternion);\n      const particleSystemWorldScale = new THREE.Vector3();\n      particleSystem.getWorldScale(particleSystemWorldScale);\n      const particleSystemMatrixWorld = new THREE.Matrix4();\n      particleSystemMatrixWorld.compose(\n        particleSystemWorldPosition,\n        particleSystemWorldQuaternion,\n        particleSystemWorldScale\n      );\n      var particleSystemInverseMatrixWorld = new THREE.Matrix4();\n      particleSystemInverseMatrixWorld = particleSystemMatrixWorld;\n      particleSystemInverseMatrixWorld.invert();\n      const particleSystemLocalRaycaster = new THREE.Raycaster();\n      particleSystemLocalRaycaster.ray.copy(raycaster.ray);\n      particleSystemLocalRaycaster.ray.applyMatrix4(particleSystemInverseMatrixWorld);\n      const intersection = particleSystemLocalRaycaster.intersectObject(particleSystem);\n      if (intersection.length > 0) {\n        // update particle positions\n        const positionAttribute = particleGeometry.getAttribute('position');\n        if (!bSplat) {\n          const array0 = new Float32Array(positionAttribute.count * 3);\n          for (let i = 0; i < positionAttribute.count * 3; i+=3) {\n            array0[i] = positionAttribute.getX(i/3);\n            array0[i+1] = 0;\n            array0[i+2] = positionAttribute.getZ(i/3);\n\n          }\n          positionAttribute.array = array0; // cập nhật vị trí mới\n          positionAttribute.needsUpdate = true; // cập nhật thay đổi\n          bSplat = true;\n        } else {\n          const array1 = new Float32Array(positionAttribute.count * 3);\n          for (let i = 0; i < positionAttribute.count * 3; i++) {\n            array1[i] = THREE.MathUtils.randFloatSpread(20);\n          }\n          positionAttribute.array = array1; // cập nhật vị trí mới\n          positionAttribute.needsUpdate = true; // cập nhật thay đổi\n          bSplat = false;\n        }\n\n      }\n    });\n\n    // Render scene\n    function animate() {\n        requestAnimationFrame(animate);\n        controls.update();\n        //TWEEN.update();\n        renderer.render(scene, camera);\n    }\n    animate();\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n    window.addEventListener('resize', onWindowResize);\n  }\n}\n</script>","import { render } from \"./SecondPage.vue?vue&type=template&id=63a93574\"\nimport script from \"./SecondPage.vue?vue&type=script&lang=js\"\nexport * from \"./SecondPage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\LUAN\\\\website\\\\vuejs_threejs\\\\VuejsThreejsForDemo\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <h1>Create Temp Page in Threejs</h1>\n    <nav-menu />\n  </div>\n</template>\n<script>\nimport * as MYCONST from '@/const.js';\nimport NavMenu from '@/components/NavMenu.vue'\nimport * as THREE from 'three'\nimport { OrbitControls } from 'three/addons/controls/OrbitControls.js';\nexport default {\n  name: 'TempPage',\n  components: {\n    NavMenu\n  },\n  mounted() {\n      const scene = new THREE.Scene();\n      \n      const camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\n      const renderer = new THREE.WebGLRenderer();\n      renderer.setClearColor(MYCONST.RENDERER_CLEAR_COLOR);\n      renderer.setSize( window.innerWidth, window.innerHeight );\n      \n      this.$el.appendChild( renderer.domElement );\n\n      const controls = new OrbitControls( camera, renderer.domElement );\n\n      const axesHelper = new THREE.AxesHelper( 10 );\n      scene.add( axesHelper );\n\n      camera.position.set(5,5,5);\n\n      const animate = function () {\n        requestAnimationFrame( animate );\n        controls.update();\n        renderer.render( scene, camera );\n      };\n      animate();\n      function onWindowResize() {\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n        renderer.setSize(window.innerWidth, window.innerHeight);\n      }\n      window.addEventListener('resize', onWindowResize);\n  }\n}\n</script>\n","import { render } from \"./TempPage.vue?vue&type=template&id=a087a844\"\nimport script from \"./TempPage.vue?vue&type=script&lang=js\"\nexport * from \"./TempPage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\LUAN\\\\website\\\\vuejs_threejs\\\\VuejsThreejsForDemo\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div>\r\n        <h1>Physics with Cannon in Threejs</h1>\r\n        <nav-menu />\r\n        <div id=\"my-gui-container\"></div>\r\n        <!-- <div id=\"my-stats-container\"></div> -->\r\n    </div>\r\n</template>\r\n<script>\r\nimport * as MYCONST from '@/const.js';\r\nimport NavMenu from '@/components/NavMenu.vue'\r\nimport * as THREE from 'three'\r\nimport { OrbitControls } from 'three/addons/controls/OrbitControls.js';\r\n// import Stats from 'three/examples/jsm/libs/stats.module'\r\nimport { GUI } from 'dat.gui'\r\nimport * as CANNON from 'cannon-es'\r\n\r\nlet gui;\r\nexport default {\r\n    name: 'APage',\r\n    components: {\r\n        NavMenu\r\n    },\r\n    unmounted() {\r\n        if (gui) gui.destroy();\r\n        gui = null;\r\n    },\r\n    mounted() {\r\n        const scene = new THREE.Scene();\r\n\r\n        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n        const renderer = new THREE.WebGLRenderer();\r\n        renderer.setClearColor(MYCONST.RENDERER_CLEAR_COLOR);\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n        renderer.shadowMap.enabled = true\r\n        this.$el.appendChild(renderer.domElement);\r\n\r\n        const controls = new OrbitControls(camera, renderer.domElement);\r\n        controls.enableDamping = true\r\n        controls.target.y = 0.5\r\n\r\n        const axesHelper = new THREE.AxesHelper(10);\r\n        scene.add(axesHelper);\r\n\r\n        camera.position.set(0, 4, 6)\r\n        //\r\n        const light1 = new THREE.SpotLight()\r\n        light1.position.set(2.5, 5, 5)\r\n        light1.angle = Math.PI / 4\r\n        light1.penumbra = 0.5\r\n        light1.castShadow = true\r\n        light1.shadow.mapSize.width = 1024\r\n        light1.shadow.mapSize.height = 1024\r\n        light1.shadow.camera.near = 0.5\r\n        light1.shadow.camera.far = 20\r\n        scene.add(light1)\r\n\r\n        const light2 = new THREE.SpotLight()\r\n        light2.position.set(-2.5, 5, 5)\r\n        light2.angle = Math.PI / 4\r\n        light2.penumbra = 0.5\r\n        light2.castShadow = true\r\n        light2.shadow.mapSize.width = 1024\r\n        light2.shadow.mapSize.height = 1024\r\n        light2.shadow.camera.near = 0.5\r\n        light2.shadow.camera.far = 20\r\n        scene.add(light2)\r\n\r\n        const world = new CANNON.World()\r\n        world.gravity.set(0, -9.82, 0)\r\n\r\n        const normalMaterial = new THREE.MeshNormalMaterial()\r\n        const phongMaterial = new THREE.MeshPhongMaterial()\r\n\r\n        const cubeGeometry = new THREE.BoxGeometry(1, 1, 1)\r\n        const cubeMesh = new THREE.Mesh(cubeGeometry, normalMaterial)\r\n        cubeMesh.position.x = -3\r\n        cubeMesh.position.y = 3\r\n        cubeMesh.castShadow = true\r\n        scene.add(cubeMesh)\r\n        const cubeShape = new CANNON.Box(new CANNON.Vec3(0.5, 0.5, 0.5))\r\n        const cubeBody = new CANNON.Body({ mass: 1 })\r\n        cubeBody.addShape(cubeShape)\r\n        cubeBody.position.x = cubeMesh.position.x\r\n        cubeBody.position.y = cubeMesh.position.y\r\n        cubeBody.position.z = cubeMesh.position.z\r\n        world.addBody(cubeBody)\r\n\r\n        const sphereGeometry = new THREE.SphereGeometry()\r\n        const sphereMesh = new THREE.Mesh(sphereGeometry, normalMaterial)\r\n        sphereMesh.position.x = -1\r\n        sphereMesh.position.y = 3\r\n        sphereMesh.castShadow = true\r\n        scene.add(sphereMesh)\r\n        const sphereShape = new CANNON.Sphere(1)\r\n        const sphereBody = new CANNON.Body({ mass: 1 })\r\n        sphereBody.addShape(sphereShape)\r\n        sphereBody.position.x = sphereMesh.position.x\r\n        sphereBody.position.y = sphereMesh.position.y\r\n        sphereBody.position.z = sphereMesh.position.z\r\n        world.addBody(sphereBody)\r\n\r\n        const icosahedronGeometry = new THREE.IcosahedronGeometry(1, 0)\r\n        const icosahedronMesh = new THREE.Mesh(icosahedronGeometry, normalMaterial)\r\n        icosahedronMesh.position.x = 1\r\n        icosahedronMesh.position.y = 3\r\n        icosahedronMesh.castShadow = true\r\n        scene.add(icosahedronMesh)\r\n        const position = (\r\n            icosahedronMesh.geometry.attributes.position\r\n        ).array\r\n        const icosahedronPoints = []\r\n        for (let i = 0; i < position.length; i += 3) {\r\n            icosahedronPoints.push(\r\n                new CANNON.Vec3(position[i], position[i + 1], position[i + 2])\r\n            )\r\n        }\r\n        const icosahedronFaces = []\r\n        for (let i = 0; i < position.length / 3; i += 3) {\r\n            icosahedronFaces.push([i, i + 1, i + 2])\r\n        }\r\n        const icosahedronShape = new CANNON.ConvexPolyhedron({\r\n            vertices: icosahedronPoints,\r\n            faces: icosahedronFaces,\r\n        })\r\n        const icosahedronBody = new CANNON.Body({ mass: 1 })\r\n        icosahedronBody.addShape(icosahedronShape)\r\n        icosahedronBody.position.x = icosahedronMesh.position.x\r\n        icosahedronBody.position.y = icosahedronMesh.position.y\r\n        icosahedronBody.position.z = icosahedronMesh.position.z\r\n        world.addBody(icosahedronBody)\r\n\r\n        const torusKnotGeometry = new THREE.TorusKnotGeometry()\r\n        const torusKnotMesh = new THREE.Mesh(torusKnotGeometry, normalMaterial)\r\n        torusKnotMesh.position.x = 4\r\n        torusKnotMesh.position.y = 3\r\n        torusKnotMesh.castShadow = true\r\n        scene.add(torusKnotMesh)\r\n        const torusKnotShape = CreateTrimesh(torusKnotMesh.geometry)\r\n        const torusKnotBody = new CANNON.Body({ mass: 1 })\r\n        torusKnotBody.addShape(torusKnotShape)\r\n        torusKnotBody.position.x = torusKnotMesh.position.x\r\n        torusKnotBody.position.y = torusKnotMesh.position.y\r\n        torusKnotBody.position.z = torusKnotMesh.position.z\r\n        world.addBody(torusKnotBody)\r\n\r\n        function CreateTrimesh(geometry) {\r\n            const vertices = (geometry.attributes.position)\r\n                .array\r\n            const indices = Object.keys(vertices).map(Number)\r\n            return new CANNON.Trimesh(vertices, indices)\r\n        }\r\n\r\n        const planeGeometry = new THREE.PlaneGeometry(25, 25)\r\n        const planeMesh = new THREE.Mesh(planeGeometry, phongMaterial)\r\n        planeMesh.rotateX(-Math.PI / 2)\r\n        planeMesh.receiveShadow = true\r\n        scene.add(planeMesh)\r\n        const planeShape = new CANNON.Plane()\r\n        const planeBody = new CANNON.Body({ mass: 0 })\r\n        planeBody.addShape(planeShape)\r\n        planeBody.quaternion.setFromAxisAngle(new CANNON.Vec3(1, 0, 0), -Math.PI / 2)\r\n        world.addBody(planeBody)\r\n\r\n        //   const stats = new Stats({ autoPlace: false })\r\n        //   //this.$el.appendChild(stats.dom)\r\n        //   var statsContainer = document.getElementById('my-stats-container');\r\n        //   statsContainer.appendChild(stats.domElement);\r\n\r\n        gui = new GUI({ autoPlace: false });\r\n        var customContainer = document.getElementById('my-gui-container');\r\n        customContainer.appendChild(gui.domElement);\r\n        const physicsFolder = gui.addFolder('Physics')\r\n        physicsFolder.add(world.gravity, 'x', -10.0, 10.0, 0.1)\r\n        physicsFolder.add(world.gravity, 'y', -10.0, 10.0, 0.1)\r\n        physicsFolder.add(world.gravity, 'z', -10.0, 10.0, 0.1)\r\n        physicsFolder.open()\r\n        const clock = new THREE.Clock()\r\n        let delta\r\n        //\r\n        function animate() {\r\n            requestAnimationFrame(animate)\r\n\r\n            controls.update()\r\n\r\n            //delta = clock.getDelta()\r\n            delta = Math.min(clock.getDelta(), 0.1)\r\n            world.step(delta)\r\n\r\n            // Copy coordinates from Cannon to Three.js\r\n            cubeMesh.position.set(\r\n                cubeBody.position.x,\r\n                cubeBody.position.y,\r\n                cubeBody.position.z\r\n            )\r\n            cubeMesh.quaternion.set(\r\n                cubeBody.quaternion.x,\r\n                cubeBody.quaternion.y,\r\n                cubeBody.quaternion.z,\r\n                cubeBody.quaternion.w\r\n            )\r\n            sphereMesh.position.set(\r\n                sphereBody.position.x,\r\n                sphereBody.position.y,\r\n                sphereBody.position.z\r\n            )\r\n            sphereMesh.quaternion.set(\r\n                sphereBody.quaternion.x,\r\n                sphereBody.quaternion.y,\r\n                sphereBody.quaternion.z,\r\n                sphereBody.quaternion.w\r\n            )\r\n            icosahedronMesh.position.set(\r\n                icosahedronBody.position.x,\r\n                icosahedronBody.position.y,\r\n                icosahedronBody.position.z\r\n            )\r\n            icosahedronMesh.quaternion.set(\r\n                icosahedronBody.quaternion.x,\r\n                icosahedronBody.quaternion.y,\r\n                icosahedronBody.quaternion.z,\r\n                icosahedronBody.quaternion.w\r\n            )\r\n            torusKnotMesh.position.set(\r\n                torusKnotBody.position.x,\r\n                torusKnotBody.position.y,\r\n                torusKnotBody.position.z\r\n            )\r\n            torusKnotMesh.quaternion.set(\r\n                torusKnotBody.quaternion.x,\r\n                torusKnotBody.quaternion.y,\r\n                torusKnotBody.quaternion.z,\r\n                torusKnotBody.quaternion.w\r\n            )\r\n\r\n            render()\r\n\r\n            // stats.update()\r\n        }\r\n\r\n        function render() {\r\n            renderer.render(scene, camera)\r\n        }\r\n\r\n        animate()\r\n\r\n        function onWindowResize() {\r\n            camera.aspect = window.innerWidth / window.innerHeight;\r\n            camera.updateProjectionMatrix();\r\n            renderer.setSize(window.innerWidth, window.innerHeight);\r\n            render()\r\n        }\r\n        window.addEventListener('resize', onWindowResize);\r\n    }\r\n}\r\n</script>\r\n<style>\r\n#my-gui-container {\r\n    position: absolute;\r\n    top: 0px;\r\n    right: 120px;\r\n}\r\n\r\n/* #my-stats-container {\r\n    position: absolute;\r\n    top: 0px;\r\n    right: 200px;\r\n    } */\r\n</style>","import { render } from \"./APage.vue?vue&type=template&id=ae32e508\"\nimport script from \"./APage.vue?vue&type=script&lang=js\"\nexport * from \"./APage.vue?vue&type=script&lang=js\"\n\nimport \"./APage.vue?vue&type=style&index=0&id=ae32e508&lang=css\"\n\nimport exportComponent from \"D:\\\\LUAN\\\\website\\\\vuejs_threejs\\\\VuejsThreejsForDemo\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <div class=\"note-text\" style=\"color:red;\">A-W-S-D to move camera. Arrow key to move vehicle. Left click to shoot. Esc\r\n      to exit</div>\r\n    <h1 style=\"color:red;\">Create Convex Object Breaker in Threejs</h1>\r\n    <progress value=\"0\" max=\"100\" id=\"progressBar\"></progress>\r\n    <nav-menu />\r\n    <div id=\"menuPanel\">\r\n      <button id=\"startButton\">Click to Start</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n//import * as MYCONST from '@/const.js';\r\nimport NavMenu from '@/components/NavMenu.vue'\r\nimport * as THREE from 'three'\r\nimport { PointerLockControls } from 'three/examples/jsm/controls/PointerLockControls'\r\n// import Stats from 'three/examples/jsm/libs/stats.module'\r\nimport * as CANNON from 'cannon-es'\r\nimport CannonUtils from './utils/cannonUtils'\r\nimport { ConvexGeometry } from 'three/examples/jsm/geometries/ConvexGeometry'\r\nimport { ConvexObjectBreaker } from 'three/examples/jsm/misc/ConvexObjectBreaker'\r\nimport { Reflector } from 'three/examples/jsm/objects/Reflector'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\nimport TWEEN from '@tweenjs/tween.js'\r\n// import { OrbitControls } from 'three/addons/controls/OrbitControls.js';\r\nexport default {\r\n  name: 'BPage',\r\n  components: {\r\n    NavMenu\r\n  },\r\n  mounted() {\r\n    const scene = new THREE.Scene();\r\n\r\n    const light1 = new THREE.DirectionalLight()\r\n    light1.position.set(20, 20, 20)\r\n    scene.add(light1)\r\n\r\n    const light2 = new THREE.DirectionalLight()\r\n    light2.position.set(-20, 20, 20)\r\n    scene.add(light2)\r\n\r\n    const camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      window.innerWidth / window.innerHeight,\r\n      0.1,\r\n      1000\r\n    )\r\n\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true })\r\n    //renderer.setClearColor(MYCONST.RENDERER_CLEAR_COLOR);\r\n    renderer.setSize(window.innerWidth, window.innerHeight)\r\n    this.$el.appendChild(renderer.domElement)\r\n\r\n    // const controlsOrbit = new OrbitControls(camera, renderer.domElement);\r\n    const progressBar = document.getElementById(\r\n      'progressBar'\r\n    )\r\n\r\n    const menuPanel = document.getElementById('menuPanel')\r\n    const startButton = document.getElementById('startButton')\r\n    startButton.addEventListener(\r\n      'click',\r\n      function () {\r\n        controls.lock()\r\n      },\r\n      false\r\n    )\r\n\r\n    const controls = new PointerLockControls(camera, renderer.domElement)\r\n    controls.addEventListener('lock', () => (menuPanel.style.display = 'none'))\r\n    controls.addEventListener('unlock', () => (menuPanel.style.display = 'block'))\r\n\r\n    camera.position.y = 1\r\n    camera.position.z = 4\r\n\r\n    // movement - please calibrate these values\r\n    // var xSpeed = 0.25;\r\n    // var ySpeed = 0.25;\r\n    let axisY = new THREE.Vector3(0, 1, 0);\r\n    let currentDir = new THREE.Vector3(0, 0, 1);\r\n\r\n    const onKeyDown = function (event) {\r\n      switch (event.key) {\r\n        case 'w':\r\n          controls.moveForward(0.25)\r\n          break\r\n        case 'a':\r\n          controls.moveRight(-0.25)\r\n          break\r\n        case 's':\r\n          controls.moveForward(-0.25)\r\n          break\r\n        case 'd':\r\n          controls.moveRight(0.25)\r\n          break\r\n        case 'ArrowRight':\r\n          {\r\n            currentDir.applyAxisAngle(axisY, -Math.PI / 10);\r\n            let _q = new THREE.Quaternion();\r\n            _q.setFromAxisAngle(axisY, -Math.PI / 10)\r\n            let tempRot = new THREE.Quaternion();\r\n            tempRot.copy(weapon.quaternion);\r\n            tempRot.multiply(_q);\r\n            new TWEEN.Tween(weapon.quaternion)\r\n              .to(\r\n                {\r\n                  _x: tempRot._x,\r\n                  _y: tempRot._y,\r\n                  _z: tempRot._z,\r\n                  _w: tempRot._w,\r\n                },\r\n                1000\r\n              )\r\n              .easing(TWEEN.Easing.Cubic.Out)\r\n              .start()\r\n          }\r\n          break\r\n        case 'ArrowLeft':\r\n          {\r\n            currentDir.applyAxisAngle(axisY, Math.PI / 10);\r\n            let _q = new THREE.Quaternion();\r\n            _q.setFromAxisAngle(axisY, Math.PI / 10)\r\n            let tempRot = new THREE.Quaternion();\r\n            tempRot.copy(weapon.quaternion);\r\n            tempRot.multiply(_q);\r\n            new TWEEN.Tween(weapon.quaternion)\r\n              .to(\r\n                {\r\n                  _x: tempRot._x,\r\n                  _y: tempRot._y,\r\n                  _z: tempRot._z,\r\n                  _w: tempRot._w,\r\n                },\r\n                1000\r\n              )\r\n              .easing(TWEEN.Easing.Cubic.Out)\r\n              .start()\r\n          }\r\n          break\r\n        case 'ArrowUp':\r\n          {\r\n            let tempPos = new THREE.Vector3()\r\n            tempPos.copy(weapon.position)\r\n            let tempDir = new THREE.Vector3(0, 0, 1)\r\n            tempDir.applyQuaternion(weapon.quaternion);\r\n            tempDir.y = 0;\r\n            tempPos.addScaledVector(tempDir, 0.5)\r\n            new TWEEN.Tween(weapon.position)\r\n              .to(\r\n                {\r\n                  x: tempPos.x,\r\n                  y: tempPos.y,\r\n                  z: tempPos.z,\r\n                },\r\n                1000\r\n              )\r\n              .easing(TWEEN.Easing.Cubic.Out)\r\n              .start()\r\n          }\r\n          break\r\n        case 'ArrowDown':\r\n          {\r\n            let tempPos = new THREE.Vector3()\r\n            tempPos.copy(weapon.position)\r\n            let tempDir = new THREE.Vector3(0, 0, 1)\r\n            tempDir.applyQuaternion(weapon.quaternion);\r\n            tempDir.y = 0;\r\n            tempPos.addScaledVector(tempDir, -0.5)\r\n            new TWEEN.Tween(weapon.position)\r\n              .to(\r\n                {\r\n                  x: tempPos.x,\r\n                  y: tempPos.y,\r\n                  z: tempPos.z,\r\n                },\r\n                1000\r\n              )\r\n              .easing(TWEEN.Easing.Cubic.Out)\r\n              .start()\r\n          }\r\n          break\r\n        case 'Space':\r\n          weapon.position.set(0, 0, 0);\r\n          break\r\n      }\r\n    }\r\n    document.addEventListener('keydown', onKeyDown, false)\r\n\r\n    const world = new CANNON.World()\r\n    world.gravity.set(0, -9.82, 0)\r\n    //;(world.solver as CANNON.GSSolver).iterations = 20\r\n    //world.allowSleep = true\r\n\r\n    const material = new THREE.MeshStandardMaterial({\r\n      //color: 0xa2ffb8,\r\n      color: 0xffffff,\r\n      //reflectivity: 0.15,\r\n      metalness: 1.0,\r\n      roughness: 0.25,\r\n      transparent: true,\r\n      opacity: 0.75,\r\n      //transmission: 1.0,\r\n      side: THREE.DoubleSide,\r\n      //clearcoat: 1.0,\r\n      //clearcoatRoughness: 0.35,\r\n    })\r\n\r\n    const pmremGenerator = new THREE.PMREMGenerator(renderer)\r\n    const envTexture = new THREE.TextureLoader().load(\r\n      'img/pano-equirectangular.jpg',\r\n      () => {\r\n        material.envMap = pmremGenerator.fromEquirectangular(envTexture).texture\r\n      }\r\n    )\r\n\r\n    const meshes = {}\r\n    const bodies = {}\r\n    let meshId = 0\r\n\r\n    const groundMirror = new Reflector(new THREE.PlaneGeometry(1024, 1024), {\r\n      color: new THREE.Color(0x222222),\r\n      clipBias: 0.003,\r\n      textureWidth: window.innerWidth * window.devicePixelRatio,\r\n      textureHeight: window.innerHeight * window.devicePixelRatio,\r\n    })\r\n    groundMirror.position.y = -0.05\r\n    groundMirror.rotateX(-Math.PI / 2)\r\n    scene.add(groundMirror)\r\n\r\n    const planeShape = new CANNON.Plane()\r\n    const planeBody = new CANNON.Body({ mass: 0 })\r\n    planeBody.addShape(planeShape)\r\n    planeBody.quaternion.setFromAxisAngle(new CANNON.Vec3(1, 0, 0), -Math.PI / 2)\r\n    world.addBody(planeBody)\r\n\r\n    const convexObjectBreaker = new ConvexObjectBreaker()\r\n\r\n    for (let i = 0; i < 20; i++) {\r\n      const size = {\r\n        x: Math.random() * 4 + 2,\r\n        y: Math.random() * 10 + 5,\r\n        z: Math.random() * 4 + 2,\r\n      }\r\n      const geo = new THREE.BoxGeometry(\r\n        size.x,\r\n        size.y,\r\n        size.z\r\n      )\r\n      const cube = new THREE.Mesh(geo, material)\r\n\r\n      cube.position.x = Math.random() * 50 - 25\r\n      cube.position.y = size.y / 2 + 0.1\r\n      cube.position.z = Math.random() * 50 - 25\r\n\r\n      if (Math.abs(cube.position.x - camera.position.x) < 5 && Math.abs(cube.position.z - camera.position.z) < 5) {\r\n        cube.position.x += 5;\r\n        cube.position.z += 5;\r\n      }\r\n\r\n      scene.add(cube)\r\n      meshes[meshId] = cube\r\n      convexObjectBreaker.prepareBreakableObject(\r\n        meshes[meshId],\r\n        1,\r\n        new THREE.Vector3(),\r\n        new THREE.Vector3(),\r\n        true\r\n      )\r\n\r\n      const cubeShape = new CANNON.Box(\r\n        new CANNON.Vec3(size.x / 2, size.y / 2, size.z / 2)\r\n      )\r\n      const cubeBody = new CANNON.Body({ mass: 1 })\r\n        ; (cubeBody).userData = { splitCount: 0, id: meshId }\r\n      cubeBody.addShape(cubeShape)\r\n      cubeBody.position.x = cube.position.x\r\n      cubeBody.position.y = cube.position.y\r\n      cubeBody.position.z = cube.position.z\r\n\r\n      world.addBody(cubeBody)\r\n      bodies[meshId] = cubeBody\r\n\r\n      meshId++\r\n    }\r\n\r\n    const bullets = {}\r\n    const bulletBodies = {}\r\n    let bulletId = 0\r\n\r\n    const bulletMaterial = new THREE.MeshPhysicalMaterial({\r\n      map: new THREE.TextureLoader().load('img/marble.png'),\r\n      clearcoat: 1.0,\r\n      clearcoatRoughness: 0,\r\n      clearcoatMap: null,\r\n      clearcoatRoughnessMap: null,\r\n      metalness: 0.4,\r\n      roughness: 0.3,\r\n      color: 'white',\r\n    })\r\n    document.addEventListener('click', onClick, false)\r\n    function onClick() {\r\n      if (controls.isLocked) {\r\n        const bullet = new THREE.Mesh(\r\n          new THREE.SphereGeometry(0.5, 16, 16),\r\n          bulletMaterial\r\n        )\r\n        bullet.position.copy(weapon.position)\r\n        bullet.position.y += 2\r\n        scene.add(bullet)\r\n        bullets[bulletId] = bullet\r\n\r\n        const bulletShape = new CANNON.Sphere(0.5)\r\n        const bulletBody = new CANNON.Body({ mass: 1 })\r\n        bulletBody.addShape(bulletShape)\r\n        bulletBody.position.x = weapon.position.x\r\n        bulletBody.position.y = weapon.position.y\r\n        bulletBody.position.z = weapon.position.z\r\n        bulletBody.position.y += 2\r\n\r\n        world.addBody(bulletBody)\r\n        bulletBodies[bulletId] = bulletBody\r\n\r\n        bulletBody.addEventListener('collide', (e) => {\r\n          if (e.body.userData) {\r\n            if (e.body.userData.splitCount < 2) {\r\n              splitObject(e.body.userData, e.contact)\r\n            }\r\n          }\r\n        })\r\n\r\n        //const v = raycaster.ray.direction.clone();\r\n        const v = new THREE.Vector3(0, 0, 1)\r\n        v.applyQuaternion(weapon.quaternion)\r\n        // const gunPos = new THREE.Vector3()\r\n        // gunPos.set(weapon.position.x, weapon.position.y+2, weapon.position.z)\r\n        //v.subVectors(pointS.position, gunPos).normalize();\r\n\r\n        // const v = new THREE.Vector3(0, 0, -1) // (0, 0 , -1) to shoot behind\r\n        // v.applyQuaternion(camera.quaternion)\r\n        // v.multiplyScalar(50)\r\n        v.multiplyScalar(50);\r\n        bulletBody.velocity.set(v.x, v.y, v.z)\r\n        bulletBody.angularVelocity.set(\r\n          Math.random() * 10 + 1,\r\n          Math.random() * 10 + 1,\r\n          Math.random() * 10 + 1\r\n        )\r\n\r\n        bulletId++\r\n\r\n        //remove old bullets\r\n        while (Object.keys(bullets).length > 5) {\r\n          scene.remove(bullets[bulletId - 6])\r\n          delete bullets[bulletId - 6]\r\n          world.removeBody(bulletBodies[bulletId - 6])\r\n          delete bulletBodies[bulletId - 6]\r\n        }\r\n      }\r\n    }\r\n\r\n    function splitObject(userData, contact) {\r\n      const contactId = userData.id\r\n      if (meshes[contactId]) {\r\n        const poi = bodies[contactId].pointToLocalFrame(\r\n          (contact.bj.position).vadd(contact.rj)\r\n        )\r\n        const n = new THREE.Vector3(\r\n          contact.ni.x,\r\n          contact.ni.y,\r\n          contact.ni.z\r\n        ).negate()\r\n        const shards = convexObjectBreaker.subdivideByImpact(\r\n          meshes[contactId],\r\n          new THREE.Vector3(poi.x, poi.y, poi.z),\r\n          n,\r\n          1,\r\n          0\r\n        )\r\n\r\n        scene.remove(meshes[contactId])\r\n        delete meshes[contactId]\r\n        world.removeBody(bodies[contactId])\r\n        delete bodies[contactId]\r\n\r\n        shards.forEach((d) => {\r\n          const nextId = meshId++\r\n\r\n          scene.add(d)\r\n          meshes[nextId] = d\r\n            ; (d).geometry.scale(0.99, 0.99, 0.99)\r\n          const shape = gemoetryToShape((d).geometry)\r\n\r\n          const body = new CANNON.Body({ mass: 1 })\r\n          body.addShape(shape)\r\n            ; (body).userData = {\r\n              splitCount: userData.splitCount + 1,\r\n              id: nextId,\r\n            }\r\n          body.position.x = d.position.x\r\n          body.position.y = d.position.y\r\n          body.position.z = d.position.z\r\n          body.quaternion.x = d.quaternion.x\r\n          body.quaternion.y = d.quaternion.y\r\n          body.quaternion.z = d.quaternion.z\r\n          body.quaternion.w = d.quaternion.w\r\n          world.addBody(body)\r\n          bodies[nextId] = body\r\n        })\r\n      }\r\n    }\r\n\r\n    function gemoetryToShape(geometry) {\r\n      const position = (geometry.attributes.position).array\r\n      const points = []\r\n      for (let i = 0; i < position.length; i += 3) {\r\n        points.push(\r\n          new THREE.Vector3(position[i], position[i + 1], position[i + 2])\r\n        )\r\n      }\r\n      const convexHull = new ConvexGeometry(points)\r\n      const shape = CannonUtils.CreateConvexPolyhedron(convexHull)\r\n      return shape\r\n    }\r\n\r\n    const mouse = new THREE.Vector2()\r\n    const raycaster = new THREE.Raycaster()\r\n    const geometryS = new THREE.SphereGeometry(0.05)\r\n    const materialS = new THREE.MeshBasicMaterial({ color: 0x000000 })\r\n    const pointS = new THREE.Mesh(geometryS, materialS)\r\n    scene.add(pointS)\r\n    pointS.visible = false;\r\n    const geometryT = new THREE.TorusGeometry(0.2, 0.01, 16, 100)\r\n    const materialT = new THREE.MeshBasicMaterial({ color: 0xff0000 })\r\n    const torus = new THREE.Mesh(geometryT, materialT)\r\n    scene.add(torus)\r\n    torus.visible = false;\r\n\r\n    renderer.domElement.addEventListener('mousemove', onMouseMove, false)\r\n    function onMouseMove(event) {\r\n      event.preventDefault()\r\n      mouse.set(\r\n        (event.clientX / window.innerWidth) * 2 - 1,\r\n        -(event.clientY / window.innerHeight) * 2 + 1\r\n      )\r\n\r\n      raycaster.setFromCamera(mouse, camera)\r\n\r\n      let arrayMeshs = [];\r\n      Object.keys(meshes).forEach((m) => {\r\n        arrayMeshs.push(meshes[m]);\r\n      })\r\n\r\n      const wall_intersects = raycaster.intersectObjects(arrayMeshs, false)\r\n\r\n      if (wall_intersects.length > 0) {\r\n\r\n        const n = new THREE.Vector3()\r\n        n.copy((wall_intersects[0].face).normal)\r\n        n.transformDirection(wall_intersects[0].object.matrixWorld)\r\n\r\n        // arrowHelper.setDirection(n)\r\n        // arrowHelper.position.copy(wall_intersects[0].point)\r\n        // arrowHelper.visible = true;\r\n        pointS.lookAt(n)\r\n        pointS.position.copy(wall_intersects[0].point)\r\n        pointS.position.addScaledVector(n, 0.1)\r\n        pointS.visible = true;\r\n\r\n        torus.lookAt(n)\r\n        torus.position.copy(wall_intersects[0].point)\r\n        torus.position.addScaledVector(n, 0.1)\r\n        torus.visible = true;\r\n        if (weapon) {\r\n          const rotationMatrix = new THREE.Matrix4()\r\n          //const rayDirection = raycaster.ray.direction.clone()\r\n          const direction = new THREE.Vector3()\r\n          const gunPos = new THREE.Vector3()\r\n          gunPos.set(weapon.position.x, weapon.position.y+2, weapon.position.z)\r\n          direction.subVectors(pointS.position, gunPos).normalize();\r\n          rotationMatrix.lookAt(weapon.position, weapon.position.clone().add(direction), weapon.up)\r\n          weapon.quaternion.setFromRotationMatrix(rotationMatrix);\r\n          weapon.rotateY(Math.PI)\r\n        }\r\n      }\r\n      else {\r\n        pointS.visible = false;\r\n        torus.visible = false;\r\n        if (weapon) {\r\n          const rotationMatrix = new THREE.Matrix4()\r\n          const rayDirection = raycaster.ray.direction.clone()\r\n          const pointB = new THREE.Vector3();\r\n          pointB.copy(camera.position).add(rayDirection.multiplyScalar(1000));\r\n          const direction = new THREE.Vector3()\r\n          const gunPos = new THREE.Vector3()\r\n          gunPos.set(weapon.position.x, weapon.position.y+2, weapon.position.z)\r\n          direction.subVectors(pointB, gunPos).normalize();\r\n\r\n          rotationMatrix.lookAt(weapon.position, weapon.position.clone().add(direction), weapon.up)\r\n          weapon.quaternion.setFromRotationMatrix(rotationMatrix);\r\n          weapon.rotateY(Math.PI)\r\n        }\r\n      }\r\n      arrayMeshs = [];\r\n    }\r\n\r\n    var weapon = null;\r\n    const loader = new GLTFLoader()\r\n    loader.load(\r\n      'models/artillery_military_weapon.glb',\r\n      function (gltf) {\r\n        progressBar.style.display = 'none'\r\n        gltf.scene.traverse(function (child) {\r\n          if ((child).isMesh) {\r\n            const m = child\r\n            m.receiveShadow = true\r\n            m.castShadow = true\r\n          }\r\n          if ((child).isLight) {\r\n            const l = child\r\n            l.castShadow = true\r\n            l.shadow.bias = -0.003\r\n            l.shadow.mapSize.width = 2048\r\n            l.shadow.mapSize.height = 2048\r\n          }\r\n        })\r\n        gltf.scene.scale.set(0.01, 0.01, 0.01)\r\n        weapon = gltf.scene;\r\n        weapon.rotateY(Math.PI);\r\n        scene.add(gltf.scene)\r\n      },\r\n      (xhr) => {\r\n        const percentComplete = (xhr.loaded / xhr.total) * 100\r\n        progressBar.value = percentComplete === Infinity ? 100 : percentComplete\r\n      },\r\n    )\r\n\r\n    window.addEventListener('resize', onWindowResize, false)\r\n    function onWindowResize() {\r\n      camera.aspect = window.innerWidth / window.innerHeight\r\n      camera.updateProjectionMatrix()\r\n      renderer.setSize(window.innerWidth, window.innerHeight)\r\n      render()\r\n    }\r\n    // const options = {\r\n    //   side: {\r\n    //     FrontSide: THREE.FrontSide,\r\n    //     BackSide: THREE.BackSide,\r\n    //     DoubleSide: THREE.DoubleSide,\r\n    //   },\r\n    // }\r\n\r\n    const clock = new THREE.Clock()\r\n    let delta\r\n\r\n    function animate() {\r\n      requestAnimationFrame(animate)\r\n\r\n      delta = clock.getDelta()\r\n      if (delta > 0.1) delta = 0.1\r\n      world.step(delta)\r\n\r\n      Object.keys(meshes).forEach((m) => {\r\n        meshes[m].position.set(\r\n          bodies[m].position.x,\r\n          bodies[m].position.y,\r\n          bodies[m].position.z\r\n        )\r\n        meshes[m].quaternion.set(\r\n          bodies[m].quaternion.x,\r\n          bodies[m].quaternion.y,\r\n          bodies[m].quaternion.z,\r\n          bodies[m].quaternion.w\r\n        )\r\n      })\r\n\r\n      Object.keys(bullets).forEach((b) => {\r\n        bullets[b].position.set(\r\n          bulletBodies[b].position.x,\r\n          bulletBodies[b].position.y,\r\n          bulletBodies[b].position.z\r\n        )\r\n        bullets[b].quaternion.set(\r\n          bulletBodies[b].quaternion.x,\r\n          bulletBodies[b].quaternion.y,\r\n          bulletBodies[b].quaternion.z,\r\n          bulletBodies[b].quaternion.w\r\n        )\r\n      })\r\n\r\n      // controlsOrbit.update();\r\n      TWEEN.update()\r\n\r\n      render()\r\n\r\n      // stats.update()\r\n    }\r\n\r\n    function render() {\r\n      renderer.render(scene, camera)\r\n    }\r\n\r\n    animate()\r\n  }\r\n}\r\n</script>\r\n<style>\r\n#progressBar {\r\n  width: 500px;\r\n  height: 24px;\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 10px;\r\n  margin-left: -250px;\r\n}\r\n\r\n#menuPanel {\r\n  position: fixed;\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n  top: 100px;\r\n  left: 0px;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n#startButton {\r\n  height: 50px;\r\n  width: 200px;\r\n  margin: -25px -100px;\r\n  position: relative;\r\n  top: 50%;\r\n  left: 50%;\r\n  font-size: 32px;\r\n}\r\n</style>","//MIT License\r\n//Copyright (c) 2020-2021 Sean Bradley\r\nimport * as THREE from 'three'\r\nimport * as CANNON from 'cannon-es'\r\n\r\n// interface Face3 {\r\n//     a: number\r\n//     b: number\r\n//     c: number\r\n//     normals: THREE.Vector3[]\r\n// }\r\n\r\nclass CannonUtils {\r\n    static CreateTrimesh(\r\n        geometry\r\n    ) {\r\n        let vertices\r\n        if (geometry.index === null) {\r\n            vertices = (geometry.attributes.position).array\r\n        } else {\r\n            vertices = (geometry.clone().toNonIndexed().attributes.position).array\r\n        }\r\n        const indices = Object.keys(vertices).map(Number)\r\n        return new CANNON.Trimesh(vertices, indices)\r\n    }\r\n\r\n    static CreateConvexPolyhedron(\r\n        geometry\r\n    ) {\r\n        const position = geometry.attributes.position\r\n        const normal = geometry.attributes.normal\r\n        const vertices = []\r\n        for (let i = 0; i < position.count; i++) {\r\n            vertices.push(new THREE.Vector3().fromBufferAttribute(position, i))\r\n        }\r\n        const faces = []\r\n        for (let i = 0; i < position.count; i += 3) {\r\n            const vertexNormals =\r\n                normal === undefined\r\n                    ? []\r\n                    : [\r\n                          new THREE.Vector3().fromBufferAttribute(normal, i),\r\n                          new THREE.Vector3().fromBufferAttribute(\r\n                              normal,\r\n                              i + 1\r\n                          ),\r\n                          new THREE.Vector3().fromBufferAttribute(\r\n                              normal,\r\n                              i + 2\r\n                          ),\r\n                      ]\r\n            const face = {\r\n                a: i,\r\n                b: i + 1,\r\n                c: i + 2,\r\n                normals: vertexNormals,\r\n            }\r\n            faces.push(face)\r\n        }\r\n\r\n        const verticesMap = {}\r\n        const points = []\r\n        const changes = []\r\n        for (let i = 0, il = vertices.length; i < il; i++) {\r\n            const v = vertices[i]\r\n            const key =\r\n                Math.round(v.x * 100) +\r\n                '_' +\r\n                Math.round(v.y * 100) +\r\n                '_' +\r\n                Math.round(v.z * 100)\r\n            if (verticesMap[key] === undefined) {\r\n                verticesMap[key] = i\r\n                points.push(\r\n                    new CANNON.Vec3(vertices[i].x, vertices[i].y, vertices[i].z)\r\n                )\r\n                changes[i] = points.length - 1\r\n            } else {\r\n                changes[i] = changes[verticesMap[key]]\r\n            }\r\n        }\r\n\r\n        const faceIdsToRemove = []\r\n        for (let i = 0, il = faces.length; i < il; i++) {\r\n            const face = faces[i]\r\n            face.a = changes[face.a]\r\n            face.b = changes[face.b]\r\n            face.c = changes[face.c]\r\n            const indices = [face.a, face.b, face.c]\r\n            for (let n = 0; n < 3; n++) {\r\n                if (indices[n] === indices[(n + 1) % 3]) {\r\n                    faceIdsToRemove.push(i)\r\n                    break\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = faceIdsToRemove.length - 1; i >= 0; i--) {\r\n            const idx = faceIdsToRemove[i]\r\n            faces.splice(idx, 1)\r\n        }\r\n\r\n        const cannonFaces = faces.map(function (f) {\r\n            return [f.a, f.b, f.c]\r\n        })\r\n\r\n        return new CANNON.ConvexPolyhedron({\r\n            vertices: points,\r\n            faces: cannonFaces,\r\n        })\r\n    }\r\n\r\n    static offsetCenterOfMass(\r\n        body,\r\n        centreOfMass\r\n    ) {\r\n        body.shapeOffsets.forEach(function (offset) {\r\n            centreOfMass.vadd(offset, centreOfMass)\r\n        })\r\n        centreOfMass.scale(1 / body.shapes.length, centreOfMass)\r\n        body.shapeOffsets.forEach(function (offset) {\r\n            offset.vsub(centreOfMass, offset)\r\n        })\r\n        const worldCenterOfMass = new CANNON.Vec3()\r\n        body.vectorToWorldFrame(centreOfMass, worldCenterOfMass)\r\n        body.position.vadd(worldCenterOfMass, body.position)\r\n    }\r\n}\r\n\r\nexport default CannonUtils","import { render } from \"./BPage.vue?vue&type=template&id=7d31cc7e\"\nimport script from \"./BPage.vue?vue&type=script&lang=js\"\nexport * from \"./BPage.vue?vue&type=script&lang=js\"\n\nimport \"./BPage.vue?vue&type=style&index=0&id=7d31cc7e&lang=css\"\n\nimport exportComponent from \"D:\\\\LUAN\\\\website\\\\vuejs_threejs\\\\VuejsThreejsForDemo\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <div id=\"boatData\"></div>\n    <div id=\"locationData\"></div>\n    <h1>Create Water in Threejs</h1>\n    <nav-menu />\n  </div>\n</template>\n<script>\n//import * as MYCONST from '@/const.js';\nimport NavMenu from '@/components/NavMenu.vue'\nimport * as THREE from 'three'\nimport { OrbitControls } from 'three/addons/controls/OrbitControls.js'\n//import Stats from '/jsm/libs/stats.module.js'\nimport { GUI } from 'dat.gui'\nimport { Sky } from 'three/examples/jsm/objects/Sky.js'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\nimport Floater from './utils/floater.js'\nimport GerstnerWater from './utils/gerstnerWater.js'\n\nlet gui\nexport default {\n  name: 'WaterPage',\n  components: {\n    NavMenu\n  },\n  unmounted() {\n    if (gui) gui.destroy();\n    gui = null;\n  },\n  mounted() {\n    const scene = new THREE.Scene()\n\n    const earth = new THREE.Group()\n    scene.add(earth)\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true })\n    renderer.setPixelRatio(window.devicePixelRatio)\n    renderer.setSize(window.innerWidth, window.innerHeight)\n    renderer.outputEncoding = THREE.sRGBEncoding\n    this.$el.appendChild(renderer.domElement)\n\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 50000)\n\n    let cameraLerp = false\n    let controlsChanging = false\n    const controls = new OrbitControls(camera, renderer.domElement)\n    controls.enableDamping = true\n    controls.maxDistance = 100\n    controls.addEventListener('start', () => {\n      controlsChanging = true\n      cameraLerp = false\n    })\n    controls.addEventListener('end', () => {\n      controlsChanging = false\n    })\n\n    const sun = new THREE.Vector3()\n\n    gui = new GUI()\n\n    const gerstnerWater = new GerstnerWater(gui)\n    earth.add(gerstnerWater.water)\n\n    const sky = new Sky()\n    sky.scale.setScalar(10000)\n    scene.add(sky)\n\n    const skyUniforms = sky.material.uniforms\n\n    skyUniforms['turbidity'].value = 10\n    skyUniforms['rayleigh'].value = 2\n    skyUniforms['mieCoefficient'].value = 0.005\n    skyUniforms['mieDirectionalG'].value = 0.8\n\n    const parameters = {\n      elevation: 2,\n      azimuth: 180,\n    }\n\n    const pmremGenerator = new THREE.PMREMGenerator(renderer)\n\n    function updateSun() {\n      const phi = THREE.MathUtils.degToRad(90 - parameters.elevation)\n      const theta = THREE.MathUtils.degToRad(parameters.azimuth)\n\n      sun.setFromSphericalCoords(1, phi, theta)\n\n      sky.material.uniforms['sunPosition'].value.copy(sun)\n      gerstnerWater.water.material.uniforms['sunDirection'].value.copy(sun)\n\n      scene.environment = pmremGenerator.fromScene(sky).texture\n    }\n\n    updateSun()\n\n    const divisor = -46080\n    const divisorMultiplier = 1.40625\n\n    // const planes = {}\n    // let visibleId = ''\n    let locationDataText = ''\n    const locationDataElem = document.getElementById('locationData')\n    // //const textureLoader = new THREE.TextureLoader()\n\n    // function makeVisible(layerId, divisor) {\n    //   const tileX = Math.floor(-earth.position.x / divisor)\n    //   const tileY = Math.floor(-earth.position.z / divisor)\n    //   let adjacentX = 0\n    //   let adjacentY = 0\n    //   if (tileX === Math.round(-earth.position.x / divisor)) {\n    //     adjacentX = tileX - 1\n    //   } else {\n    //     adjacentX = tileX + 1\n    //   }\n    //   if (tileY === Math.round(-earth.position.z / divisor)) {\n    //     adjacentY = tileY - 1\n    //   } else {\n    //     adjacentY = tileY + 1\n    //   }\n    //   visibleId = layerId + ',' + tileX + ',' + tileY\n    //   if (!planes[visibleId]) {\n    //     createPlane(layerId, tileX, tileY, divisor)\n    //   }\n    //   planes[visibleId].visible = true\n    //   visibleId = layerId + ',' + adjacentX + ',' + tileY\n    //   if (!planes[visibleId]) {\n    //     createPlane(layerId, adjacentX, tileY, divisor)\n    //   }\n    //   planes[visibleId].visible = true\n    //   visibleId = layerId + ',' + adjacentX + ',' + adjacentY\n    //   if (!planes[visibleId]) {\n    //     createPlane(layerId, adjacentX, adjacentY, divisor)\n    //   }\n    //   planes[visibleId].visible = true\n    //   visibleId = layerId + ',' + tileX + ',' + adjacentY\n    //   if (!planes[visibleId]) {\n    //     createPlane(layerId, tileX, adjacentY, divisor)\n    //   }\n    //   planes[visibleId].visible = true\n    // }\n\n    // function createPlane(layerId, x, y, divisor) {\n    //   const id = layerId + ',' + x.toString() + ',' + y.toString()\n    //   planes[id] = new THREE.Mesh(\n    //     new THREE.PlaneGeometry(divisor, divisor, 107, 107),\n    //     new THREE.MeshPhysicalMaterial() //wireframe: true })\n    //   )\n    //   planes[id].rotateX(-Math.PI / 2)\n    //   planes[id].position.x = x * divisor + divisor / 2\n    //   planes[id].position.z = y * divisor + divisor / 2\n    //   earth.add(planes[id])\n    //   // let offsetX = 128\n    //   // let offsetY = 64\n    //   // const hgtImage = new Image()\n    //   // hgtImage.onload = () => {\n    //   //   const canvas = document.createElement('canvas')\n    //   //   canvas.width = 108\n    //   //   canvas.height = 108\n    //   //   const context = canvas.getContext('2d')\n    //   //   context.drawImage(hgtImage, 0, 0)\n    //   //   const data = context.getImageData(0, 0, 108, 108)\n    //   //   let dataOffset = 0\n    //   //   let ele = 0\n    //   //   for (let i = 2; i < planes[id].geometry.attributes.position.array.length; i = i + 3) {\n    //   //     let b0 = data.data[dataOffset + 0]\n    //   //     let b1 = data.data[dataOffset + 1]\n    //   //     ele = ((b1 << 8) | b0) - 32767\n    //   //     planes[id].geometry.attributes.position.array[i] = ele\n    //   //     dataOffset += 4\n    //   //   }\n    //   //   planes[id].geometry.computeVertexNormals()\n    //   //   planes[id].geometry.attributes.position.needsUpdate = true\n    //   // }\n    //   // hgtImage.src = '/tiles_hgt/' + layerId + '_' + (y + offsetY) + '_' + (x + offsetX) + '.png'\n    //   // const tileUrl = '/tiles/' + layerId + '_' + (y + offsetY) + '_' + (x + offsetX) + '.jpg'\n    //   // textureLoader.load(tileUrl, (t) => {\n    //   //   planes[id].material.map = t\n    //   //   planes[id].material.needsUpdate = true\n    //   // })\n    // }\n\n    //boat\n    let controlledBoatId = 0\n    const followCamPivot = new THREE.Object3D()\n    const lat = 15.0302\n    const lon = -24.4485\n    let boatDataText = ''\n    const boatDataElem = document.getElementById('boatData')\n    const startX = (lon * divisor) / divisorMultiplier\n    const startZ = -(lat * divisor) / divisorMultiplier\n\n    let floaters = []\n\n    // main user boat\n    const loader = new GLTFLoader()\n    loader.load(\n      'models/boat.glb',\n      function (gltf) {\n        gltf.scene.traverse(function (child) {\n          if (child.isMesh) {\n            child.material = new THREE.MeshStandardMaterial({ roughness: 0 })\n          }\n        })\n        const group = new THREE.Group()\n        group.add(gltf.scene)\n        const floater = new Floater(earth, group, gerstnerWater, true)\n        floaters.push(floater)\n        controlledBoatId = floaters.length - 1\n\n        gltf.scene.add(followCamPivot)\n        followCamPivot.position.set(0, 5, -7.5)\n\n        group.position.x = startX\n        group.position.z = startZ\n\n        camera.position.set(group.position.x, 100, group.position.z - 100)\n\n        earth.add(group)\n\n        cameraLerp = true\n\n        //loadTestBoxes()\n        //loadTestBoat1()\n        //loadTestBoat2()\n\n        camera.position.set(0, 100, -100)\n      },\n      (xhr) => {\n        console.log((xhr.loaded / xhr.total) * 100 + '% loaded')\n      },\n      (error) => {\n        console.log(error)\n      }\n    )\n\n    // // floating boxes\n    // function loadTestBoxes() {\n    //   const boxGeometry = new THREE.BoxGeometry(1, 1, 1)\n\n    //   for (let i = 0; i < 10; i++) {\n    //     const box = new THREE.Mesh(\n    //       boxGeometry.clone(),\n    //       new THREE.MeshStandardMaterial({ roughness: 0 })\n    //     )\n    //     const group = new THREE.Group()\n    //     group.position.set(startX + (i * 10 - 30), 0, startZ + (i * 10 - 50))\n    //     group.add(box.clone())\n    //     const floater = new Floater(earth, group, gerstnerWater)\n    //     floaters.push(floater)\n    //     earth.add(group)\n    //   }\n    // }\n\n    // function loadTestBoat1() {\n    //   loader.load(\n    //     'models/boat2.glb',\n    //     function (gltf) {\n    //       for (let i = 0; i < 1; i++) {\n    //         const group = new THREE.Group()\n    //         group.position.set(startX + 20, 0, startZ + 20)\n    //         group.add(gltf.scene)\n    //         const floater = new Floater(earth, group, gerstnerWater)\n    //         floaters.push(floater)\n    //         earth.add(group)\n    //       }\n    //     },\n    //     (xhr) => {\n    //       console.log((xhr.loaded / xhr.total) * 100 + '% loaded')\n    //     },\n    //     (error) => {\n    //       console.log(error)\n    //     }\n    //   )\n    // }\n\n    // function loadTestBoat2() {\n    //   loader.load(\n    //     'models/boat3.glb',\n    //     function (gltf) {\n    //       for (let i = 0; i < 1; i++) {\n    //         const group = new THREE.Group()\n    //         group.position.set(startX - 40, 0, startZ + 40)\n    //         group.add(gltf.scene)\n    //         const floater = new Floater(earth, group, gerstnerWater)\n    //         floaters.push(floater)\n    //         earth.add(group)\n    //       }\n    //     },\n    //     (xhr) => {\n    //       console.log((xhr.loaded / xhr.total) * 100 + '% loaded')\n    //     },\n    //     (error) => {\n    //       console.log(error)\n    //     }\n    //   )\n    // }\n\n    //const stats = new Stats()\n    //document.body.appendChild(stats.dom)\n\n    const folderSky = gui.addFolder('Sky')\n    folderSky.add(parameters, 'elevation', 0, 90, 0.1).onChange(updateSun)\n    folderSky.add(parameters, 'azimuth', -180, 180, 0.1).onChange(updateSun)\n    //folderSky.open()\n\n    window.addEventListener('resize', onWindowResize)\n\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight\n      camera.updateProjectionMatrix()\n\n      renderer.setSize(window.innerWidth, window.innerHeight)\n    }\n\n    const onKeyDown = function (event) {\n      switch (event.code) {\n        case 'KeyW':\n          if (!controlsChanging) {\n            cameraLerp = true\n          }\n          if (floaters[controlledBoatId].power < 1) {\n            floaters[controlledBoatId].power += 0.01\n          }\n          break\n        case 'KeyA':\n          if (!controlsChanging) {\n            cameraLerp = true\n          }\n          floaters[controlledBoatId].heading += 0.05\n          break\n        case 'KeyS':\n          if (!controlsChanging) {\n            cameraLerp = true\n          }\n          if (floaters[controlledBoatId].power > -1) {\n            floaters[controlledBoatId].power -= 0.01\n          }\n          break\n        case 'KeyD':\n          if (!controlsChanging) {\n            cameraLerp = true\n          }\n          floaters[controlledBoatId].heading -= 0.05\n          break\n      }\n    }\n    document.addEventListener('keydown', onKeyDown, false)\n\n    const clock = new THREE.Clock()\n    let delta = 0\n\n    function animate() {\n      requestAnimationFrame(animate)\n      delta = clock.getDelta()\n\n      floaters.forEach((f) => {\n        f.update(delta)\n        // f.sphereMesh.visible = false\n        // floaters.forEach((f2) => {\n        //     if (f !== f2 && f.collisionSphere.intersectsSphere(f2.collisionSphere)) {\n        //         f.sphereMesh.visible = true\n        //     }\n        // })\n      })\n\n      if (floaters[controlledBoatId]) {\n        earth.position.x = -floaters[controlledBoatId].object.position.x\n        earth.position.z = -floaters[controlledBoatId].object.position.z\n\n        boatDataText =\n          'pwr:' +\n          floaters[controlledBoatId].power.toFixed(2) +\n          ' ms:' +\n          floaters[controlledBoatId].ms.toFixed(2) +\n          ` kts:` +\n          (floaters[controlledBoatId].ms * 1.94384).toFixed(2) +\n          ' hdg:' +\n          -((floaters[controlledBoatId].heading / Math.PI) * 180).toFixed(2)\n        boatDataElem.innerText = boatDataText\n\n        if (cameraLerp) {\n          const v = new THREE.Vector3()\n          followCamPivot.getWorldPosition(v)\n          camera.position.lerp(v, 0.025)\n          controls.target.y = floaters[controlledBoatId].object.position.y + 2\n        }\n      }\n\n      controls.update()\n\n      gerstnerWater.update(delta)\n\n      render()\n\n      // makeVisible(7, divisor)\n      locationDataText =\n        ((earth.position.z / divisor) * divisorMultiplier).toFixed(6) +\n        ' ' +\n        ((-earth.position.x / divisor) * divisorMultiplier).toFixed(6)\n      locationDataElem.innerText = locationDataText\n\n      //stats.update()\n    }\n\n    function render() {\n      renderer.render(scene, camera)\n    }\n\n    animate()\n  }\n}\n</script>\n<style>\n#boatData {\n  position: absolute;\n  left: 20px;\n  bottom: 50px;\n  font-size: 17px;\n  font-family: monospace;\n  color: white;\n  pointer-events: none;\n}\n\n#locationData {\n  position: absolute;\n  left: 20px;\n  bottom: 20px;\n  font-size: 17px;\n  font-family: monospace;\n  color: white;\n  pointer-events: none;\n}\n</style>","import * as THREE from 'three'\r\n\r\nexport default class Floater {\r\n    earth\r\n    object\r\n    gerstnerWater\r\n    cogHelper\r\n    velocityHelper\r\n    waveNormalHelpers = []\r\n    gravityHelpers = []\r\n    gravitySlideHelpers = []\r\n    floatPoints = []\r\n    down = new THREE.Vector3(0, -1, 0)\r\n    heading = 0\r\n    power = 0\r\n    isPlayerFloater = false\r\n    collisionSphere\r\n    //sphereMesh\r\n    //boxHelper: THREE.Box3Helper\r\n    lastPosition = new THREE.Vector3()\r\n    velocity = new THREE.Vector3()\r\n    ms = 0\r\n    forces = []\r\n\r\n    constructor(\r\n        earth,\r\n        object,\r\n        gerstnerWater,\r\n        isPlayerFloater = false\r\n    ) {\r\n        this.earth = earth\r\n        this.object = object\r\n        this.gerstnerWater = gerstnerWater\r\n        this.isPlayerFloater = isPlayerFloater\r\n\r\n        this.object.traverse((child) => {\r\n            if (child.name.startsWith('floatPoint')) {\r\n                this.floatPoints.push(child)\r\n            }\r\n        })\r\n        if (!this.floatPoints.length) {\r\n            //then create one in the middle that we can use\r\n            const floatPoint = new THREE.Object3D()\r\n            //floatPoint.name = 'floatPoint'\r\n            this.object.add(floatPoint)\r\n            this.floatPoints.push(floatPoint)\r\n        }\r\n\r\n        //;(this.object as THREE.Mesh).geometry.computeBoundingBox()\r\n        const aabb = new THREE.Box3().setFromObject(this.object)\r\n        this.collisionSphere = new THREE.Sphere()\r\n        aabb.getBoundingSphere(this.collisionSphere)\r\n        // this.sphereMesh = new THREE.Mesh(\r\n        //     new THREE.SphereGeometry(this.collisionSphere.radius, 8, 8),\r\n        //     new THREE.MeshBasicMaterial({\r\n        //         color: 0xff0000,\r\n        //         transparent: true,\r\n        //         opacity: 0.25,\r\n        //         visible: false,\r\n        //     })\r\n        // )\r\n        // this.object.add(this.sphereMesh)\r\n\r\n        //console.log(this.collisionSphere)\r\n\r\n        //this.object.add(this.boxHelper)\r\n\r\n        this.cogHelper = new THREE.ArrowHelper(\r\n            new THREE.Vector3(),\r\n            new THREE.Vector3(),\r\n            7.5,\r\n            0x00ff00\r\n        )\r\n        earth.add(this.cogHelper)\r\n\r\n        this.velocityHelper = new THREE.ArrowHelper(\r\n            new THREE.Vector3(),\r\n            new THREE.Vector3(),\r\n            7.5,\r\n            0xff00ff\r\n        )\r\n        earth.add(this.velocityHelper)\r\n\r\n        this.floatPoints.forEach((fp) => {\r\n            const waveNormalHelper = new THREE.ArrowHelper(\r\n                new THREE.Vector3(),\r\n                new THREE.Vector3(),\r\n                5,\r\n                0xffff00\r\n            )\r\n            waveNormalHelper.position.copy(fp.position)\r\n            this.waveNormalHelpers.push(waveNormalHelper)\r\n            earth.add(waveNormalHelper)\r\n\r\n            const gravitySlideHelper = new THREE.ArrowHelper(\r\n                new THREE.Vector3(0, 1, 0),\r\n                new THREE.Vector3(),\r\n                5,\r\n                0x00ffff\r\n            )\r\n            gravitySlideHelper.position.copy(fp.position)\r\n            this.gravitySlideHelpers.push(gravitySlideHelper)\r\n            earth.add(gravitySlideHelper)\r\n        })\r\n    }\r\n\r\n    //r = 0\r\n    update(delta) {\r\n        //this.boxHelper.updateMatrixWorld(true)\r\n\r\n        const t = this.gerstnerWater.water.material.uniforms['time'].value\r\n\r\n        const accumulatedPosition = new THREE.Vector3() // this.object.position.clone()\r\n\r\n        const accumulatedNormal = new THREE.Vector3(0, 0, 0)\r\n\r\n        this.floatPoints.forEach((fp, i) => {\r\n            const fpWorldPos = new THREE.Vector3()\r\n\r\n            fp.getWorldPosition(fpWorldPos)\r\n            fpWorldPos.sub(this.earth.position)\r\n\r\n            const waveInfo = this.gerstnerWater.getWaveInfo(\r\n                this.object.position.x,\r\n                this.object.position.z,\r\n                fpWorldPos.x,\r\n                fpWorldPos.z,\r\n                t\r\n            )\r\n\r\n            this.waveNormalHelpers[i].setDirection(waveInfo.normal)\r\n            this.waveNormalHelpers[i].position.copy(fpWorldPos)\r\n\r\n            const gravitySlideDirection = new THREE.Vector3(0, -1, 0)\r\n                .add(waveInfo.normal)\r\n                .divideScalar(2)\r\n                .normalize()\r\n\r\n            this.gravitySlideHelpers[i].setDirection(gravitySlideDirection)\r\n            this.gravitySlideHelpers[i].position.copy(fpWorldPos)\r\n\r\n            accumulatedPosition.y += waveInfo.position.y\r\n            accumulatedPosition.x += this.object.position.x + waveInfo.normal.x\r\n            accumulatedPosition.z += this.object.position.z + waveInfo.normal.z\r\n\r\n            accumulatedNormal.add(waveInfo.normal)\r\n        })\r\n\r\n        //average all floatPoints directions\r\n        accumulatedPosition.divideScalar(this.floatPoints.length)\r\n\r\n        //this.object.position.y = accumulatedPosition.y\r\n\r\n        // //apply any forces\r\n        if (this.forces.length) {\r\n            this.forces.forEach((f) => {\r\n                //console.log(f)\r\n                //accumulatedPosition.add(new THREE.Vector3(f.x, f.y, f.z))\r\n                accumulatedPosition.x += f.x\r\n                accumulatedPosition.z += f.z\r\n                //accumulatedPosition.sub(f)\r\n            })\r\n            this.forces = []\r\n        }\r\n\r\n        accumulatedPosition.x += Math.sin(this.heading) * this.power\r\n        accumulatedPosition.z += Math.cos(this.heading) * this.power\r\n\r\n        //console.log(this.object.position.x,accumulatedPosition.x)\r\n        //this.object.position.copy(accumulatedPosition)//\r\n        this.object.position.lerp(accumulatedPosition, 0.25)\r\n\r\n        this.velocity = this.lastPosition.clone().sub(accumulatedPosition).negate()\r\n        this.velocityHelper.setDirection(this.velocity)\r\n        this.velocityHelper.position.set(\r\n            accumulatedPosition.x,\r\n            accumulatedPosition.y + 1,\r\n            accumulatedPosition.z\r\n        )\r\n\r\n        const dist = accumulatedPosition.distanceTo(this.lastPosition)\r\n        this.ms = dist * 1000 * delta\r\n        this.velocityHelper.setLength(this.ms)\r\n        this.lastPosition = accumulatedPosition\r\n\r\n        this.collisionSphere.center.copy(this.object.position)\r\n\r\n        accumulatedNormal.divideScalar(this.floatPoints.length).normalize()\r\n\r\n        this.cogHelper.setDirection(accumulatedNormal)\r\n        this.cogHelper.position.copy(accumulatedPosition)\r\n\r\n        this.object.children[0].rotation.y = this.heading\r\n        this.object.quaternion.rotateTowards(this.cogHelper.quaternion, delta * 0.2)\r\n\r\n        if (this.isPlayerFloater) {\r\n            this.gerstnerWater.water.position.x = -this.earth.position.x\r\n            this.gerstnerWater.water.position.z = -this.earth.position.z\r\n            this.gerstnerWater.water.material.uniforms['offsetX'].value =\r\n                -this.earth.position.x\r\n            this.gerstnerWater.water.material.uniforms['offsetZ'].value =\r\n                -this.earth.position.z\r\n        }\r\n    }\r\n}\r\n","33\r\nimport * as THREE from 'three'\r\nimport { Water } from 'three/examples/jsm/objects/Water.js'\r\n\r\nexport default class GerstnerWater {\r\n    water\r\n    waves\r\n    texture\r\n\r\n    constructor(gui) {\r\n        const waterGeometry = new THREE.PlaneGeometry(4096, 4096, 256, 256)\r\n        this.texture = new THREE.TextureLoader().load('img/waternormals.jpg', function (texture) {\r\n            texture.wrapS = texture.wrapT = THREE.RepeatWrapping\r\n        })\r\n\r\n        this.waves = [\r\n            { direction: 0, steepness: 0.15, wavelength: 100 },\r\n            { direction: 30, steepness: 0.15, wavelength: 50 },\r\n            { direction: 60, steepness: 0.15, wavelength: 25 },\r\n        ]\r\n\r\n        this.water = new Water(waterGeometry, {\r\n            textureWidth: 512,\r\n            textureHeight: 512,\r\n            waterNormals: this.texture,\r\n            sunDirection: new THREE.Vector3(),\r\n            sunColor: 0xffffff,\r\n            waterColor: 0x001e0f,\r\n            distortionScale: 8,\r\n            fog: undefined,\r\n        })\r\n\r\n        this.water.material.wireframe = false\r\n        this.water.rotation.x = -Math.PI / 2\r\n        this.water.material.onBeforeCompile = (\r\n            shader\r\n        ) => {\r\n            shader.uniforms.offsetX = { value: 0 }\r\n            shader.uniforms.offsetZ = { value: 0 }\r\n            shader.uniforms.waveA = {\r\n                value: [\r\n                    Math.sin((this.waves[0].direction * Math.PI) / 180),\r\n                    Math.cos((this.waves[0].direction * Math.PI) / 180),\r\n                    this.waves[0].steepness,\r\n                    this.waves[0].wavelength,\r\n                ],\r\n            }\r\n            shader.uniforms.waveB = {\r\n                value: [\r\n                    Math.sin((this.waves[1].direction * Math.PI) / 180),\r\n                    Math.cos((this.waves[1].direction * Math.PI) / 180),\r\n                    this.waves[1].steepness,\r\n                    this.waves[1].wavelength,\r\n                ],\r\n            }\r\n            shader.uniforms.waveC = {\r\n                value: [\r\n                    Math.sin((this.waves[2].direction * Math.PI) / 180),\r\n                    Math.cos((this.waves[2].direction * Math.PI) / 180),\r\n                    this.waves[2].steepness,\r\n                    this.waves[2].wavelength,\r\n                ],\r\n            }\r\n            shader.vertexShader = `\r\n                uniform mat4 textureMatrix;\r\n                uniform float time;\r\n\r\n                varying vec4 mirrorCoord;\r\n                varying vec4 worldPosition;\r\n\r\n                #include <common>\r\n                #include <fog_pars_vertex>\r\n                #include <shadowmap_pars_vertex>\r\n                #include <logdepthbuf_pars_vertex>\r\n\r\n                uniform vec4 waveA;\r\n                uniform vec4 waveB;\r\n                uniform vec4 waveC;\r\n\r\n                uniform float offsetX;\r\n                uniform float offsetZ;\r\n\r\n                vec3 GerstnerWave (vec4 wave, vec3 p) {\r\n                    float steepness = wave.z;\r\n                    float wavelength = wave.w;\r\n                    float k = 2.0 * PI / wavelength;\r\n                    float c = sqrt(9.8 / k);\r\n                    vec2 d = normalize(wave.xy);\r\n                    float f = k * (dot(d, vec2(p.x, p.y)) - c * time);\r\n                    float a = steepness / k;\r\n\r\n                    return vec3(\r\n                        d.x * (a * cos(f)),\r\n                        d.y * (a * cos(f)),\r\n                        a * sin(f)\r\n                    );\r\n                }\r\n\r\n                void main() {\r\n\r\n                    mirrorCoord = modelMatrix * vec4( position, 1.0 );\r\n                    worldPosition = mirrorCoord.xyzw;\r\n                    mirrorCoord = textureMatrix * mirrorCoord;\r\n\r\n                    vec3 gridPoint = position.xyz;\r\n                    vec3 tangent = vec3(1, 0, 0);\r\n                    vec3 binormal = vec3(0, 0, 1);\r\n                    vec3 p = gridPoint;\r\n                    gridPoint.x += offsetX;//*2.0;\r\n                    gridPoint.y -= offsetZ;//*2.0;\r\n                    p += GerstnerWave(waveA, gridPoint);\r\n                    p += GerstnerWave(waveB, gridPoint);\r\n                    p += GerstnerWave(waveC, gridPoint);\r\n                    gl_Position = projectionMatrix * modelViewMatrix * vec4( p.x, p.y, p.z, 1.0);\r\n\r\n                    #include <beginnormal_vertex>\r\n                    #include <defaultnormal_vertex>\r\n                    #include <logdepthbuf_vertex>\r\n                    #include <fog_vertex>\r\n                    #include <shadowmap_vertex>\r\n                }`\r\n\r\n            shader.fragmentShader = `\r\n                uniform sampler2D mirrorSampler;\r\n                uniform float alpha;\r\n                uniform float time;\r\n                uniform float size;\r\n                uniform float distortionScale;\r\n                uniform sampler2D normalSampler;\r\n                uniform vec3 sunColor;\r\n                uniform vec3 sunDirection;\r\n                uniform vec3 eye;\r\n                uniform vec3 waterColor;\r\n\r\n                varying vec4 mirrorCoord;\r\n                varying vec4 worldPosition;\r\n\r\n                uniform float offsetX;\r\n                uniform float offsetZ;\r\n\r\n                vec4 getNoise( vec2 uv ) {\r\n                    vec2 uv0 = ( uv / 103.0 ) + vec2(time / 17.0, time / 29.0);\r\n                    vec2 uv1 = uv / 107.0-vec2( time / -19.0, time / 31.0 );\r\n                    vec2 uv2 = uv / vec2( 8907.0, 9803.0 ) + vec2( time / 101.0, time / 97.0 );\r\n                    vec2 uv3 = uv / vec2( 1091.0, 1027.0 ) - vec2( time / 109.0, time / -113.0 );\r\n                    vec4 noise = texture2D( normalSampler, uv0 ) +\r\n                        texture2D( normalSampler, uv1 ) +\r\n                        texture2D( normalSampler, uv2 ) +\r\n                        texture2D( normalSampler, uv3 );\r\n                    return noise * 0.5 - 1.0;\r\n                }\r\n\r\n                void sunLight( const vec3 surfaceNormal, const vec3 eyeDirection, float shiny, float spec, float diffuse, inout vec3 diffuseColor, inout vec3 specularColor ) {\r\n                    vec3 reflection = normalize( reflect( -sunDirection, surfaceNormal ) );\r\n                    float direction = max( 0.0, dot( eyeDirection, reflection ) );\r\n                    specularColor += pow( direction, shiny ) * sunColor * spec;\r\n                    diffuseColor += max( dot( sunDirection, surfaceNormal ), 0.0 ) * sunColor * diffuse;\r\n                }\r\n\r\n                #include <common>\r\n                #include <packing>\r\n                #include <bsdfs>\r\n                #include <fog_pars_fragment>\r\n                #include <logdepthbuf_pars_fragment>\r\n                #include <lights_pars_begin>\r\n                #include <shadowmap_pars_fragment>\r\n                #include <shadowmask_pars_fragment>\r\n\r\n                void main() {\r\n\r\n                    #include <logdepthbuf_fragment>\r\n\r\n                    vec4 noise = getNoise( (worldPosition.xz) + vec2(offsetX/12.25,offsetZ/12.25) * size );\r\n                    vec3 surfaceNormal = normalize( noise.xzy * vec3( 1.5, 1.0, 1.5 ) );\r\n\r\n                    vec3 diffuseLight = vec3(0.0);\r\n                    vec3 specularLight = vec3(0.0);\r\n\r\n                    vec3 worldToEye = eye-worldPosition.xyz;\r\n                    vec3 eyeDirection = normalize( worldToEye );\r\n                    sunLight( surfaceNormal, eyeDirection, 100.0, 2.0, 0.5, diffuseLight, specularLight );\r\n\r\n                    float distance = length(worldToEye);\r\n\r\n                    vec2 distortion = surfaceNormal.xz * ( 0.001 + 1.0 / distance ) * distortionScale;\r\n                    vec3 reflectionSample = vec3( texture2D( mirrorSampler, mirrorCoord.xy / mirrorCoord.w + distortion ) );\r\n\r\n                    float theta = max( dot( eyeDirection, surfaceNormal ), 0.0 );\r\n                    float rf0 = 0.3;\r\n                    float reflectance = rf0 + ( 1.0 - rf0 ) * pow( ( 1.0 - theta ), 5.0 );\r\n                    vec3 scatter = max( 0.0, dot( surfaceNormal, eyeDirection ) ) * waterColor;\r\n                    vec3 albedo = mix( ( sunColor * diffuseLight * 0.3 + scatter ) * getShadowMask(), ( vec3( 0.1 ) + reflectionSample * 0.9 + reflectionSample * specularLight ), reflectance);\r\n                    vec3 outgoingLight = albedo;\r\n                    gl_FragColor = vec4( outgoingLight, alpha );\r\n\r\n                    #include <tonemapping_fragment>\r\n                    #include <fog_fragment>\r\n                }`\r\n            shader.uniforms.size.value = 10.0\r\n        }\r\n\r\n        const waterUniforms = this.water.material.uniforms\r\n\r\n        const folderWater = gui.addFolder('Water')\r\n        folderWater.add(waterUniforms.distortionScale, 'value', 0, 8, 0.1).name('distortionScale')\r\n        folderWater.add(waterUniforms.size, 'value', 0.1, 10, 0.1).name('size')\r\n        folderWater.add(this.water.material, 'wireframe')\r\n        //folderWater.open()\r\n\r\n        const waveAFolder = gui.addFolder('Wave A')\r\n        waveAFolder\r\n            .add(this.waves[0], 'direction', 0, 359)\r\n            .name('Direction')\r\n            .onChange((v) => {\r\n                const x = (v * Math.PI) / 180\r\n                waterUniforms.waveA.value[0] = Math.sin(x)\r\n                waterUniforms.waveA.value[1] = Math.cos(x)\r\n            })\r\n        waveAFolder\r\n            .add(this.waves[0], 'steepness', 0, 1, 0.01)\r\n            .name('Steepness')\r\n            .onChange((v) => {\r\n                waterUniforms.waveA.value[2] = v\r\n            })\r\n        waveAFolder\r\n            .add(this.waves[0], 'wavelength', 1, 100)\r\n            .name('Wavelength')\r\n            .onChange((v) => {\r\n                waterUniforms.waveA.value[3] = v\r\n            })\r\n        //waveAFolder.open()\r\n\r\n        const waveBFolder = gui.addFolder('Wave B')\r\n        waveBFolder\r\n            .add(this.waves[1], 'direction', 0, 359)\r\n            .name('Direction')\r\n            .onChange((v) => {\r\n                const x = (v * Math.PI) / 180\r\n                waterUniforms.waveB.value[0] = Math.sin(x)\r\n                waterUniforms.waveB.value[1] = Math.cos(x)\r\n            })\r\n        waveBFolder\r\n            .add(this.waves[1], 'steepness', 0, 1, 0.01)\r\n            .name('Steepness')\r\n            .onChange((v) => {\r\n                waterUniforms.waveB.value[2] = v\r\n            })\r\n        waveBFolder\r\n            .add(this.waves[1], 'wavelength', 1, 100)\r\n            .name('Wavelength')\r\n            .onChange((v) => {\r\n                waterUniforms.waveB.value[3] = v\r\n            })\r\n        //waveBFolder.open()\r\n\r\n        const waveCFolder = gui.addFolder('Wave C')\r\n        waveCFolder\r\n            .add(this.waves[2], 'direction', 0, 359)\r\n            .name('Direction')\r\n            .onChange((v) => {\r\n                const x = (v * Math.PI) / 180\r\n                waterUniforms.waveC.value[0] = Math.sin(x)\r\n                waterUniforms.waveC.value[1] = Math.cos(x)\r\n            })\r\n        waveCFolder\r\n            .add(this.waves[2], 'steepness', 0, 1, 0.01)\r\n            .name('Steepness')\r\n            .onChange((v) => {\r\n                waterUniforms.waveC.value[2] = v\r\n            })\r\n        waveCFolder\r\n            .add(this.waves[2], 'wavelength', 1, 100)\r\n            .name('Wavelength')\r\n            .onChange((v) => {\r\n                waterUniforms.waveC.value[3] = v\r\n            })\r\n        //waveCFolder.open()\r\n    }\r\n\r\n    getWaveInfo(offsetX, offsetZ, x, z, time) {\r\n        const pos = new THREE.Vector3()\r\n        const tangent = new THREE.Vector3(1, 0, 0)\r\n        const binormal = new THREE.Vector3(0, 0, 1)\r\n        this.waves.forEach((w) => {\r\n            const k = (Math.PI * 2.0) / w.wavelength\r\n            const c = Math.sqrt(9.8 / k)\r\n            const d = new THREE.Vector2(\r\n                Math.sin((w.direction * Math.PI) / 180),\r\n                -Math.cos((w.direction * Math.PI) / 180)\r\n            )\r\n            const f = k * (d.dot(new THREE.Vector2(x, z)) - c * time)\r\n            const a = w.steepness / k\r\n\r\n            pos.x += d.x * (a * Math.cos(f))\r\n            pos.y += a * Math.sin(f)\r\n            pos.z += d.y * (a * Math.cos(f))\r\n\r\n            tangent.x += -d.x * d.x * (w.steepness * Math.sin(f))\r\n            tangent.y += d.x * (w.steepness * Math.cos(f))\r\n            tangent.z += -d.x * d.y * (w.steepness * Math.sin(f))\r\n\r\n            binormal.x += -d.x * d.y * (w.steepness * Math.sin(f))\r\n            binormal.y += d.y * (w.steepness * Math.cos(f))\r\n            binormal.z += -d.y * d.y * (w.steepness * Math.sin(f))\r\n        })\r\n\r\n        const normal = binormal.cross(tangent).normalize()\r\n        return { position: pos, normal: normal }\r\n    }\r\n\r\n    update(delta) {\r\n        this.water.material.uniforms['time'].value += delta\r\n    }\r\n}","import { render } from \"./WaterPage.vue?vue&type=template&id=f7d42212\"\nimport script from \"./WaterPage.vue?vue&type=script&lang=js\"\nexport * from \"./WaterPage.vue?vue&type=script&lang=js\"\n\nimport \"./WaterPage.vue?vue&type=style&index=0&id=f7d42212&lang=css\"\n\nimport exportComponent from \"D:\\\\LUAN\\\\website\\\\vuejs_threejs\\\\VuejsThreejsForDemo\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router';\r\nimport HomePage from './components/HomePage.vue';\r\nimport AboutPage from './components/AboutPage.vue';\r\nimport FirstPage from './components/FirstPage.vue';\r\nimport SecondPage from './components/SecondPage.vue';\r\nimport TempPage from './components/TempPage.vue';\r\nimport APage from './components/APage.vue';\r\nimport BPage from './components/BPage.vue';\r\nimport WaterPage from './components/WaterPage.vue';\r\n\r\nconst routes = [\r\n  {\r\n    path: '/threejsdemo/water',\r\n    name: 'Water',\r\n    component: WaterPage\r\n  },\r\n  {\r\n    path: '/threejsdemo/a',\r\n    name: 'A',\r\n    component: APage\r\n  },\r\n  {\r\n    path: '/threejsdemo/b',\r\n    name: 'B',\r\n    component: BPage\r\n  },\r\n  {\r\n    path: '/threejsdemo/',\r\n    name: 'Home',\r\n    component: HomePage\r\n  },\r\n  {\r\n    path: '/threejsdemo/temp',\r\n    name: 'Temp Page',\r\n    component: TempPage\r\n  },\r\n  {\r\n    path: '/threejsdemo/about',\r\n    name: 'About',\r\n    component: AboutPage\r\n  },\r\n  {\r\n    path: '/threejsdemo/multicoloredsphere',\r\n    name: 'Multicolored Sphere',\r\n    component: FirstPage\r\n  },\r\n  {\r\n    path: '/threejsdemo/secondpage',\r\n    name: 'Second Page',\r\n    component: SecondPage\r\n  }\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes\r\n});\r\n\r\nexport default router;\r\n","import { render } from \"./App.vue?vue&type=template&id=b3c84c16\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=b3c84c16&lang=css\"\n\nimport exportComponent from \"D:\\\\LUAN\\\\website\\\\vuejs_threejs\\\\VuejsThreejsForDemo\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\n\n// Import CSS\n//import './assets/css/style.css';\n\n// Create Vue app instance\nconst app = createApp(App);\n\n// Register Vue router instance\napp.use(router);\n\n// Mount Vue app instance to the DOM\napp.mount('#app');","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkthreejsdemo\"] = self[\"webpackChunkthreejsdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(3261); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_router_view","_createElementVNode","class","style","_hoisted_2","_component_nav_menu","_hoisted_3","_hoisted_7","_component_router_link","to","exact","navigate","_normalizeClass","active","_ctx","$route","path","onClick","$event","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","script","__exports__","name","components","NavMenu","mounted","scene","THREE","light1","position","set","angle","Math","PI","penumbra","castShadow","shadow","mapSize","width","height","camera","near","far","add","light2","window","innerWidth","innerHeight","followCamPivot","rotation","order","followCam","z","renderer","setSize","outputEncoding","shadowMap","enabled","this","$el","appendChild","domElement","world","CANNON","gravity","groundMaterial","slipperyMaterial","slippery_ground_cm","friction","restitution","contactEquationStiffness","contactEquationRelaxation","addContactMaterial","characterCollider","y","colliderShape","colliderBody","mass","material","mixer","addShape","x","linearDamping","angularFactor","addBody","modelMesh","modelReady","animationActions","activeAction","lastAction","gltfLoader","GLTFLoader","load","gltf","traverse","child","isMesh","m","receiveShadow","frustumCulled","geometry","computeVertexNormals","mat","transparent","side","animationAction","clipAction","animations","push","target","console","log","tracks","shift","setAction","xhr","lengthComputable","error","toAction","loop","fadeOut","reset","fadeIn","play","clampWhenFinished","moveForward","moveBackward","moveLeft","moveRight","canJump","contactNormal","upAxis","addEventListener","e","contact","bi","ni","negate","copy","dot","planeGeometry","texture","plane","map","rotateX","planeShape","planeBody","quaternion","setFromAxisAngle","boxes","boxMeshes","i","halfExtents","random","boxShape","boxGeometry","boxBody","boxMesh","menuPanel","document","getElementById","startButton","controls","lock","PointerLockControls","onWindowResize","aspect","updateProjectionMatrix","render","display","onDocumentKey","onDocumentMouseMove","onDocumentMouseWheel","removeEventListener","setTimeout","movementX","movementY","newVal","deltaY","keyMap","code","type","isLocked","velocity","inputVelocity","euler","quat","camTo","targetQuaternion","distance","clock","delta","animate","requestAnimationFrame","update","p","distanceTo","rotationMatrix","lookAt","up","setFromRotationMatrix","equals","rotateTowards","setFromEuler","applyQuaternion","lerp","applyImpulse","min","getDelta","step","forEach","b","w","getWorldPosition","lerpVectors","RENDERER_CLEAR_COLOR","currentpage","init","light","object","color","scale","antialias","setPixelRatio","devicePixelRatio","setClearColor","MYCONST","selectionBox","SelectionBox","helper","SelectionHelper","event","item","collection","emissive","startPoint","clientX","clientY","isDown","length","endPoint","allSelected","select","OrbitControls","axesHelper","size","divisions","gridHelper","sphereMesh","createsphere","radius","widthSegments","heightSegments","sphereGeometry","rainbowColors","colors","Array","attributes","count","fill","setHex","floor","colorAttribute","flatMap","toArray","setAttribute","vertexColors","particleGeometry","positions","positionAttribute","particleMaterial","particleSystem","mouseX","mouseY","r","g","bSplat","mouse","raycaster","setFromCamera","particleSystemWorldPosition","particleSystemWorldQuaternion","getWorldQuaternion","particleSystemWorldScale","getWorldScale","particleSystemMatrixWorld","compose","particleSystemInverseMatrixWorld","invert","particleSystemLocalRaycaster","ray","applyMatrix4","intersection","intersectObject","getAttribute","array1","Float32Array","array","needsUpdate","array0","getX","getZ","gui","unmounted","destroy","enableDamping","normalMaterial","phongMaterial","cubeGeometry","cubeMesh","cubeShape","cubeBody","sphereShape","sphereBody","icosahedronGeometry","icosahedronMesh","icosahedronPoints","icosahedronFaces","icosahedronShape","vertices","faces","icosahedronBody","torusKnotGeometry","torusKnotMesh","torusKnotShape","CreateTrimesh","torusKnotBody","indices","Object","keys","Number","planeMesh","GUI","autoPlace","customContainer","physicsFolder","addFolder","open","value","max","_hoisted_4","CannonUtils","static","index","clone","toNonIndexed","normal","fromBufferAttribute","vertexNormals","undefined","face","a","c","normals","verticesMap","points","changes","il","v","key","round","faceIdsToRemove","n","idx","splice","cannonFaces","f","body","centreOfMass","shapeOffsets","offset","vadd","shapes","vsub","worldCenterOfMass","vectorToWorldFrame","progressBar","axisY","currentDir","onKeyDown","applyAxisAngle","_q","tempRot","weapon","multiply","TWEEN","_x","_y","_z","_w","easing","start","tempPos","tempDir","addScaledVector","metalness","roughness","opacity","pmremGenerator","envTexture","envMap","fromEquirectangular","meshes","bodies","meshId","groundMirror","Reflector","clipBias","textureWidth","textureHeight","convexObjectBreaker","ConvexObjectBreaker","geo","cube","abs","prepareBreakableObject","userData","splitCount","bullets","bulletBodies","bulletId","bulletMaterial","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","bullet","bulletShape","bulletBody","splitObject","multiplyScalar","angularVelocity","remove","removeBody","contactId","poi","pointToLocalFrame","bj","rj","shards","subdivideByImpact","d","nextId","shape","gemoetryToShape","convexHull","ConvexGeometry","geometryS","materialS","pointS","visible","geometryT","materialT","torus","onMouseMove","preventDefault","arrayMeshs","wall_intersects","intersectObjects","transformDirection","matrixWorld","point","direction","gunPos","subVectors","normalize","rotateY","rayDirection","pointB","loader","isLight","l","bias","percentComplete","loaded","total","Infinity","Floater","constructor","earth","gerstnerWater","isPlayerFloater","_defineProperty","startsWith","floatPoints","floatPoint","aabb","setFromObject","collisionSphere","getBoundingSphere","cogHelper","velocityHelper","fp","waveNormalHelper","waveNormalHelpers","gravitySlideHelper","gravitySlideHelpers","t","water","uniforms","accumulatedPosition","accumulatedNormal","fpWorldPos","sub","waveInfo","getWaveInfo","setDirection","gravitySlideDirection","divideScalar","forces","sin","heading","power","cos","lastPosition","dist","ms","setLength","center","children","GerstnerWater","waterGeometry","wrapS","wrapT","waves","steepness","wavelength","Water","waterNormals","sunDirection","sunColor","waterColor","distortionScale","fog","wireframe","onBeforeCompile","shader","offsetX","offsetZ","waveA","waveB","waveC","vertexShader","fragmentShader","waterUniforms","folderWater","waveAFolder","onChange","waveBFolder","waveCFolder","time","pos","tangent","binormal","k","sqrt","cross","cameraLerp","controlsChanging","maxDistance","sun","sky","Sky","setScalar","skyUniforms","parameters","elevation","azimuth","updateSun","phi","theta","setFromSphericalCoords","environment","fromScene","divisor","divisorMultiplier","locationDataText","locationDataElem","controlledBoatId","lat","lon","boatDataText","boatDataElem","startX","startZ","floaters","group","floater","folderSky","toFixed","innerText","routes","component","WaterPage","APage","BPage","HomePage","TempPage","AboutPage","FirstPage","SecondPage","router","createRouter","history","createWebHistory","app","createApp","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","deferred","O","result","chunkIds","fn","priority","notFulfilled","fulfilled","j","every","getter","__esModule","definition","o","defineProperty","enumerable","get","globalThis","Function","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}